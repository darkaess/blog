name: Deployment

on:
  pull_request:

jobs:
  hexo-deployment:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai

    steps:
    - name: Checkout Source
      uses: actions/checkout@v1
      with:
          submodules: true

    - name: Setup Node.js
      uses: actions/setup-node@v1.1.0
      with:
          node-version: '12.x'

    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'

    - name: Get pip cache
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - name: Get coscmd's requirements
      run: wget https://raw.githubusercontent.com/tencentyun/coscmd/master/requirements.txt

    - name: Pip cache
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

#    - name: Fix Wrong Update Time
#      run: |
#        find source/_posts -name '*.md' | while read file
#        do touch -d "$(git log -1 --format="@%ct" "$file")" "$file"
#        done

    - name: Install dependencies & Generate static files
      run: |
        export PATH="$PATH:$(yarn global bin)"
        yarn global add hexo-cli
        yarn install
        sed -i '18s/imageLink/imageLink.replace(\/\![0-9]{3,}x\/,"")/' themes/next/source/js/utils.js
        yarn build

    - name: Deploy to Github for Backup
      env:
        GIT_NAME: lei2rock
        GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
        REPO: github.com/lei2rock/blog
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        cd ./public && git init && git add .
        git config --global user.name $GIT_NAME
        git config --global user.email $GIT_EMAIL
        git commit -m "Site building test by GitHub Actions"
        git push --force --quiet "https://$GH_TOKEN@$REPO" master:master

    - name: Telegram Notification
      if: cancelled() == false
      uses: xinthink/action-telegram@v1.1
      with:
        botToken: ${{ secrets.TG_BOT_TOKEN }} #use telegram bot @BotFather
        chatId: ${{ secrets.TG_CHAT_ID }} #use telegram bot @userinfobot
        jobStatus: ${{ job.status }}
        skipSuccess: false
