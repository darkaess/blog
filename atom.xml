<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>班班碎碎念</title>
  
  <subtitle>无曰已是 无曰遂真</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.dlzhang.com/"/>
  <updated>2020-04-05T17:02:31.643Z</updated>
  <id>https://blog.dlzhang.com/</id>
  
  <author>
    <name>班班</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>近期博客站点的更新</title>
    <link href="https://blog.dlzhang.com/posts/2020/%E8%BF%91%E6%9C%9F%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9%E7%9A%84%E6%9B%B4%E6%96%B0/"/>
    <id>https://blog.dlzhang.com/posts/2020/%E8%BF%91%E6%9C%9F%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9%E7%9A%84%E6%9B%B4%E6%96%B0/</id>
    <published>2020-04-04T16:10:23.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>最近再次对博客站点进行了一番比较大的更新升级，主要是成功解决了几个历史性遗留问题，例如访问的速度、图片没有缩略图预览、自定义样式代码不太清楚等等。经过这一次的改造，感觉未来短期内大规模的更新变动应该不会有了，毕竟主要的需求都已经实现。<a id="more"></a></p><h2 id="1-部署到对象存储"><a href="#1-部署到对象存储" class="headerlink" title="1. 部署到对象存储"></a>1. 部署到对象存储</h2><p>这其中主要的变动是更新了主题，以及从 Netlify 迁移到了阿里云对象存储（OSS），并且把部分的静态文件（css，js 和图像文件）放到了腾讯云对象存储（COS），还在腾讯云的对象存储上套了一层国内的 CDN 加速。</p><p>之所以这样区分是因为：腾讯云有每月对象存储免费额度和 CDN 免费流量额度，但是自定义域名绑定存储桶且开启 https 一定要通过 CDN 托管证书（不论境内外存储桶），而因为 CDN 要走国内节点所以一定要备案，故不能单独用腾讯云；阿里云对象存储可以解决上述问题，但是免费额度比较少，而且没有备案的域名虽然可以开启 https 但是一定要绑定非中国大陆节点的存储桶（如中国香港），因此将部分不需要自定义域名但是常常需要访问的资源放到腾讯云的存储桶加上国内 CDN 是非常有用的。我还使用腾讯云的云函数功能，每当存储桶有变动时候就让云函数去自动触发刷新各个节点缓存。</p><h2 id="2-持续集成与缩略图"><a href="#2-持续集成与缩略图" class="headerlink" title="2. 持续集成与缩略图"></a>2. 持续集成与缩略图</h2><p>这样，随之而来的问题就是部署站点，因为现在需要同时传输到两个地方。之前我采用的持续集成方案是 Travis CI，不过有一个问题是开始构建前的环境准备要比较长的时间。相比较而言，新出的 GitHub Actions 不仅启动比较快，而且集成在 GitHub 的代码仓库中，使用起来十分方便。另外，我还利用 GitHub Actions 拓展了一个新功能，也即每一次成功执行构建任务都会通过 Telegram bot 向我推送一条消息提醒（比邮件提醒方式方便多了）。</p><p>最后，因为 NexT 主题的 Fancybox 图片插件处理时没有提供缩略图的选项，使得每次加载图片都会载入原图。这样使得对象存储外网流出流量变大，而且会让访客浏览网页时加载速度偏慢。针对这一问题，我选择了一种对主题文件无损的修改方式来完成这个需求：在 GitHub Actions 工作流中利用 <code>sed</code> 的替换命令来实现对主题文件的临时性修改，从而实现图片默认显示缩略图、点击放大加载原图的效果。</p><h2 id="3-重构自定义样式"><a href="#3-重构自定义样式" class="headerlink" title="3. 重构自定义样式"></a>3. 重构自定义样式</h2><p>通过重构自定义样式，规范化了样式的格式，加入了每个样式的注释，还利用了 <code>mixins.styl</code> 样式文件。另外，因为 NexT 主题添加了黑暗模式和更新图标到 Font Awesome 5，所以也进行了色彩和图标调整适配。同时响应全国哀悼日对新冠肺炎疫情中逝世同胞和牺牲烈士的哀悼，加入了一个全站黑白样式，可以通过配置文件来打开关闭。</p><p>以上这些变动，都可以查阅我的 <a href="https://github.com/lei2rock/blog/blob/src/.github/workflows/deployment.yml" target="_blank" rel="noopener">GitHub Actions 脚本</a> 以及博客的 <a href="https://github.com/lei2rock/blog" target="_blank" rel="noopener">代码仓库</a> 了解。最后，放上博客的测速结果地图。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2020/%E8%BF%91%E6%9C%9F%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9%E7%9A%84%E6%9B%B4%E6%96%B0/speed-test.jpg!500x" alt="网站测速结果"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近再次对博客站点进行了一番比较大的更新升级，主要是成功解决了几个历史性遗留问题，例如访问的速度、图片没有缩略图预览、自定义样式代码不太清楚等等。经过这一次的改造，感觉未来短期内大规模的更新变动应该不会有了，毕竟主要的需求都已经实现。
    
    </summary>
    
    
      <category term="碎碎念" scheme="https://blog.dlzhang.com/overview/ramble/"/>
    
    
      <category term="blog" scheme="https://blog.dlzhang.com/overview/tags/blog/"/>
    
      <category term="对象存储" scheme="https://blog.dlzhang.com/overview/tags/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/"/>
    
      <category term="GitHub Actions" scheme="https://blog.dlzhang.com/overview/tags/GitHub-Actions/"/>
    
  </entry>
  
  <entry>
    <title>清明寄哀思：致敬英雄，缅怀同胞</title>
    <link href="https://blog.dlzhang.com/posts/2020/%E6%B8%85%E6%98%8E%E5%AF%84%E5%93%80%E6%80%9D/"/>
    <id>https://blog.dlzhang.com/posts/2020/%E6%B8%85%E6%98%8E%E5%AF%84%E5%93%80%E6%80%9D/</id>
    <published>2020-04-03T16:00:00.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<center><p>有的人永远留在了寒冬，</p><p>是为了让更多的人能够迎来春天。</p><p>缅怀同胞、致敬英雄，</p><p>也要感谢每一个为防疫努力的人，</p><p>当中有我，也有你的参与。<a id="more"></a></p><h2 id="国-务-院-公-告"><a href="#国-务-院-公-告" class="headerlink" title="国 务 院 公 告"></a><strong>国 务 院 公 告</strong></h2></center><p>　　为表达全国各族人民对抗击新冠肺炎疫情斗争牺牲烈士和逝世同胞的深切哀悼，国务院决定，2020年4月4日举行全国性哀悼活动。在此期间，全国和驻外使领馆下半旗志哀，全国停止公共娱乐活动。4月4日10时起，全国人民默哀3分钟，汽车、火车、舰船鸣笛，防空警报鸣响。</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;p&gt;有的人永远留在了寒冬，&lt;/p&gt;&lt;p&gt;是为了让更多的人能够迎来春天。&lt;/p&gt;&lt;p&gt;缅怀同胞、致敬英雄，&lt;/p&gt;&lt;p&gt;也要感谢每一个为防疫努力的人，&lt;/p&gt;&lt;p&gt;当中有我，也有你的参与。
    
    </summary>
    
    
      <category term="碎碎念" scheme="https://blog.dlzhang.com/overview/ramble/"/>
    
    
      <category term="COVID19" scheme="https://blog.dlzhang.com/overview/tags/COVID19/"/>
    
      <category term="哀悼日" scheme="https://blog.dlzhang.com/overview/tags/%E5%93%80%E6%82%BC%E6%97%A5/"/>
    
  </entry>
  
  <entry>
    <title>全球新冠肺炎的扩散与防疫观察</title>
    <link href="https://blog.dlzhang.com/posts/2020/%E5%85%A8%E7%90%83%E6%96%B0%E5%86%A0%E8%82%BA%E7%82%8E%E7%9A%84%E6%89%A9%E6%95%A3%E4%B8%8E%E9%98%B2%E7%96%AB%E8%A7%82%E5%AF%9F/"/>
    <id>https://blog.dlzhang.com/posts/2020/%E5%85%A8%E7%90%83%E6%96%B0%E5%86%A0%E8%82%BA%E7%82%8E%E7%9A%84%E6%89%A9%E6%95%A3%E4%B8%8E%E9%98%B2%E7%96%AB%E8%A7%82%E5%AF%9F/</id>
    <published>2020-03-29T05:50:37.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>从一月开始蔓延的新冠病毒疫情至今已经两个多月了，本以为随着中国疫情的逐渐缓和，病毒蔓延得到了控制，生活也可以逐渐恢复正常了，谁知道本月以来疫情在全世界扩散开来。从一开始报道的韩国新天地教会疫情，到如今的美国、意大利确诊病例纷纷超越中国，形势也是越来越严峻。这个新冠肺炎疫情已经变成了一场影响全球经济社会发展的重大挑战。<a id="more"></a></p><h2 id="香港应对疫情的魔幻"><a href="#香港应对疫情的魔幻" class="headerlink" title="香港应对疫情的魔幻"></a>香港应对疫情的魔幻</h2><p>全国舆论对于新冠肺炎疫情的广泛关注起始于一月下旬（也即农历除夕前夕），随着武汉封城而进入顶峰。在此之前，香港媒体对此进行了比较集中的报道，当然这其中除了「跑得快」这个因素外，不外乎是对报道宣传内地负面新闻的热衷罢了。</p><p>香港媒体的这种报道确实让一部分香港民众对疫情产生了一定的关注，我认识的几个香港本地同学还曾特地向我询问内地疫情的情况。然而当时属于过年前的那段时间，香港刚刚从去年底的混乱中恢复过来，内地媒体也报道说「没有明确的人传人的证据」，所以我本人也没有对此引起更多的重视。</p><p>其实香港媒体最初对于疫情的关注，并没有让香港民众对本次新冠肺炎疫情产生足够的、提前的重视与防范，更多人是以一种看客的心态看待这次的疫情，甚至有人是幸灾乐祸的。这导致在一开始内地疫情极为严重的时候，香港激进本土派为代表的群体以「全面封关」为诉求口号，谋求香港对内地的封闭和拒绝内地人士访港。</p><p>这种不是真正出于公共卫生角度考量，而是带有政治目的的防疫诉求自然是得不到香港政府的认可，于是他们联合「黄色」医护人员开始进行医护届「罢工」来对政府施压。疫情当前，香港医护届似乎忘记了希波克拉底誓词（Hippocratic Oath）的字句，把政治利益放在了高于病患生命健康的地位。也不知道，他们选择医生、护士作为自己职业的时候，有没有那么一丝丝救死扶伤、治病救人的理想与追求？</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2020/%E5%85%A8%E7%90%83%E6%96%B0%E5%86%A0%E8%82%BA%E7%82%8E%E7%9A%84%E6%89%A9%E6%95%A3%E4%B8%8E%E9%98%B2%E7%96%AB%E8%A7%82%E5%AF%9F/hongkong.jpg!500x" alt="香港最新的防疫政策"></p><p>当时间进入三月中下旬中国内地的疫情得到了比较有效的控制之时，海外的疫情却面临四处爆发的局面。境外输入性风险不断加大，美欧日等地确诊病例逐日攀升，而香港确诊人数则多日位居全国首位。可是这时候，我们似乎听不到这些人主动提出要求对海外「全面封关」的诉求了。港府近期多次发布严格的防疫政策（如禁止多人集会、持牌酒肆禁止贩酒等），可是这些人依旧没有少出门、少聚会，除了戴口罩外依旧在上街示威与警察发生对抗冲突，还对港府各项防疫政策冷嘲热讽，不得不让人对香港近期的防疫产生一丝的担忧。</p><p>香港从去年底「蒙面违法」，到如今的「必须戴口罩」；而各个学校从去年底的混乱中停课，到如今因为疫情而继续停课，不能不说是一种魔幻了。</p><h2 id="新媒体时代的新挑战"><a href="#新媒体时代的新挑战" class="headerlink" title="新媒体时代的新挑战"></a>新媒体时代的新挑战</h2><p>在这次应对疫情当中，湖北省、武汉市当地一开始的工作确实不尽如人意。从新闻中可以看出，当地政府在应对新闻舆情、面对媒体方面依然不熟悉。新媒体、自媒体时代地方政府应对疫情的同时必然要直面媒体的监督和回应舆论的讨论。湖北、武汉在这方面出现的问题其实也不仅仅是当地特有的，很多地方其实都存在这方面的问题。</p><p>当然我们也看到那些熟悉本地区实际情况，能够清楚明白阐述自己的政策措施，及时调整工作不足回应舆论监督的官员得到了广大人民群众的热烈赞誉。例如，河南省省长的全省防控工作、天津疾控的张颖主任在流行病学调查中的细致追踪、温州市市长在《新闻1+1》上清楚阐述本地区的防控工作困难与应对措施、杭州市副市长用图表手板开新闻发布会等等。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2020/%E5%85%A8%E7%90%83%E6%96%B0%E5%86%A0%E8%82%BA%E7%82%8E%E7%9A%84%E6%89%A9%E6%95%A3%E4%B8%8E%E9%98%B2%E7%96%AB%E8%A7%82%E5%AF%9F/hangzhou.jpg!500x" alt="杭州市副市长陈卫强"></p><p>所以说，现在的网民也不是只会一味指责的。如果有好的表现，大家同样会给予赞扬的言语。这不是还有网友表示要去「偷省长」了吗？防疫与宣传是同样重要的两件事情，控制好流行传染性疾病不仅仅是医疗上的控制，更多的是要加强对社会各界的公共卫生教育和引导。</p><p>在人人都是媒体，大家都可以发表意见，时时刻刻都在监督工作的时代，如何将自己做过的、正在做的、将要做的、以及希望民众去做的准确完整清楚地阐述传达，或许是各地政府官员都需要重视的思考和问题了。这不仅仅是监督政府工作要求的，也是促进维护社会稳定、引导群众舆论出发要考虑的，还是一种不错的自我宣传方式。</p><h2 id="戴口罩与群体免疫"><a href="#戴口罩与群体免疫" class="headerlink" title="戴口罩与群体免疫"></a>戴口罩与群体免疫</h2><p>随着疫情在三月份开始全球范围内的蔓延扩散，大家都在说要外国人民和政府「抄作业」。中国防疫表现不能说满分，但是目前和国外比起来确实优秀许多了。</p><p>最关键也是最容易做到的戴口罩问题，中国是直接要求民众出门一定要戴口罩，纵使前期口罩不足也没有改变这一措施。而且「全民戴口罩」这一措施似乎仅仅在包括港澳台在内全中国范围内有共识，国外很多人都认为健康的人不需要戴口罩。确实，严格说口罩只需要患病的人戴，健康的人不需要戴。</p><p>但是，这是建立在所有患病病人都会自觉佩戴口罩，而且感染病毒即发病基础之上的。事实上，并不是发病的患者都会主动佩戴口罩，而且现在大量数据表明新冠病毒感染有潜伏期，并不一定出现临床症状，甚至有很多是无症状感染者，所以我们无法知道谁病了。有一个办法可以解决，那就是全民戴口罩，这样就能让所有带病毒的人，不把飞沫传播到空气中，同时因为没病的人也因为戴口罩，降低呼入病毒飞沫。</p><p>当然也有人说人人戴口罩，并不代表人人都会戴口罩。而且戴口罩的人容易不自觉触碰口罩外侧，然后接触口鼻眼睛，增加感染几率。可是如果仅仅因为一点小小的不足而无视全民戴口罩政策带来的巨大效果，似乎十分不合理不应该吧？这样的道理各国精英和领导人会不知道吗？精英怎么可能不知道，只不过因为口罩不够用就骗平民说不需要戴口罩；因为医院床位不够，就骗民众说群体免疫好。</p><p>说到群体免疫，英国政府简直是身先士卒、以身作则！鲍里斯前脚刚说完群体免疫政策好，不过大家要做好失去亲人的准备；后脚就发现大嘤的「太子」居然也感染了！「决赛圈」比赛瞬间紧张激烈起来了。正在大家还在震惊，还在担心老佛爷身体状况的时候，又传出首相（中堂大人）和卫生大臣（太医院）相继感染。 <del>庚子年果真是不太平！</del> 不对，应该是群体免疫本来就是投降主义，就是放弃的政策，是对本国人民和全球公共卫生的不负责任。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2020/%E5%85%A8%E7%90%83%E6%96%B0%E5%86%A0%E8%82%BA%E7%82%8E%E7%9A%84%E6%89%A9%E6%95%A3%E4%B8%8E%E9%98%B2%E7%96%AB%E8%A7%82%E5%AF%9F/uk.jpg!400x" alt=""></p><h2 id="走在前列的浙江行动"><a href="#走在前列的浙江行动" class="headerlink" title="走在前列的浙江行动"></a>走在前列的浙江行动</h2><p>中国在经历了2019年与美国全面性贸易战后，贸易谈判取得一定成果，与美国初步达成了贸易协议。看似贸易战可以缓一缓了，结果开年迎来疫情的重大打击，许多企业迟迟不能复工复产，经济面临严重的挑战，实现预期增长目标似乎已经不太可能。特别是对于浙江这种中小企业众多的省份，面临的困难更多。</p><p>作为浙江人，观察到浙江省在面对疫情后的恢复工作上是十分积极的。健康码，这一简化健康申报流程工作，加快人员监测的创新最先出现在浙江的疫情防控工作中，政企合作开发，全省乃至全国推广。浙江还首创「五色图」精准评估县域疫情风险等级，实现了对各地区疫情防治工作的分级管理。浙江多个县市政府也在疫情缓和之后，开展了「抢人」行动，前出几个劳动力输出大省，主动与当地对接「新浙江人」返回浙江的工作，包车运送到工作单位。这样的方式既帮助企业在困难时期尽快恢复生产，也减少了员工复工路上受到感染的风险。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2020/%E5%85%A8%E7%90%83%E6%96%B0%E5%86%A0%E8%82%BA%E7%82%8E%E7%9A%84%E6%89%A9%E6%95%A3%E4%B8%8E%E9%98%B2%E7%96%AB%E8%A7%82%E5%AF%9F/zhejiang.png!600x" alt="浙江省疫情五色图"></p><p>此外，浙江省在预防境外输入性病例方面也十分主动。在我老家，各个社区通过公安局出入境部门提供的本辖区内申领出入境证件记录，逐一落实情况，询问回不回来、如果回来什么时候回来（要去接机安排隔离）。我自己就在最近接到了分别来自社区和来自县公安局出入境部门的两个电话，爸妈那边也接到了一次社区打来的电话，同时还让我们进行网上信息登记。这样细致的工作，也让我在外面对爸妈更加放心了。</p><h2 id="考场并不只是在防疫"><a href="#考场并不只是在防疫" class="headerlink" title="考场并不只是在防疫"></a>考场并不只是在防疫</h2><p>或许谁也料想不到，2020年会以这样的方式开局。这一场遍及全球的传染病大流行，不仅仅是对医疗和公共卫生领域的考验，更是对整个社会的全面性挑战。</p><p>日本原定于今年夏季举办东京奥运会，也寄希望于通过奥运会拯救陷入低迷多年的经济。之前疫情出现上升势头时候大家就在讨论日本要不要推迟举办奥运会，可是东京方面一直不愿意松口，还按期开始了奥运圣火传递。后来在多国因为疫情严重宣布不参加奥运会的情况下，日本终于松口与国际奥委会达成共识推迟奥运会到明年举办。就在宣布奥运会、残奥会延期之后，却看到了日本特别是东京的确诊病例一下子增加了，甚至日本政府还说未来几周将迎来疫情高峰。这不得不让人怀疑，之前日本设置极高的检测门槛，疫情看似平缓，其实可能完全是因为「一切为了两会」。</p><p>韩国宗教，特别是基督教新教十分兴盛。而由于新教的特点和韩国政府的放任管理，基于新教而产生的邪教更是形形色色、多种多样。这次韩国的「新天地」教会引发的大规模群体性感染，一下子把韩国的邪教问题暴露了出来。一句「哈利路亚」，似乎就可以获得免疫的能力，甚至去鼓励教徒不顾政府禁令到处走动散播病毒。「宗教」开始侵入政权的范围，干预政治权力的运作的时候，这个国家是十分危险的。不过，幸好这次的韩国总统是文在寅而不是朴槿惠，抵抗住了各色「宗教」的压力，强势推动政府防疫政策。目前来看，韩国的疫情大致是被控制住了。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2020/%E5%85%A8%E7%90%83%E6%96%B0%E5%86%A0%E8%82%BA%E7%82%8E%E7%9A%84%E6%89%A9%E6%95%A3%E4%B8%8E%E9%98%B2%E7%96%AB%E8%A7%82%E5%AF%9F/korea.jpg!300x" alt="全光勋：哈利路亚！"></p><p>中国在疫情发生后就宣布了新冠病毒感染的肺炎救治费用，在医保报销后的差额由财政全额负担，也就是说对普通民众而言治疗是全免费的。事实上，在国家财政承受范围之内，对于大规模的流行传染病进行免费救治，可以避免一部分人因为经济负担而逃避治疗，从而避免可能导致的更大范围传染。但是，在这次疫情中，我们看到欧美国家在对新冠肺炎的诊断上就在讨论是否要免费，更不用说是不是要进行免费治疗。高昂的治疗费用让很多人望而却步，甚至能否获得检测确诊都变得十分困难。可是另一方面，我看到很多精英人士仅仅是因为有了轻微症状就得到了检测和确诊。</p><p>这里，不仅仅是医保制度的问题，其实还有是否决定要以牺牲经济来保障公共卫生防疫的考量。中国选择了以巨大的经济牺牲来换取对疫情的控制，而欧美很多国家的政治决策者显然更加偏向于保障经济发展。这里不能完全说孰是孰非，比较各自国情不同有不同的考量。但是，「佛系」的抗议不代表不作为，更不代表对人民生命的漠视和放弃。我们看到许多国家因为医疗系统被沉重的疫情击穿时候，不得不放弃对65岁以上老人的治疗。「时代的一粒灰，落在个人头上，就是一座山。对现在还挣扎在痛苦中的人们，谈生活太奢侈了，有些时候，光是活着，就已经拼尽全力。」这是某些人说中国的疫情时候曾说的话，而这句话其实现在看来更加适用于目前的欧美部分国家。</p><p>中世纪黑死病的流行和宗教谎言的破灭，让人们开始启蒙觉醒，从而打破了天主教对人们的枷锁，出现了文艺复兴。当年人们跑到郊外躲避瘟疫，住在一起的人们每人每天讲一个故事来渡过酷热的日子，成就了《十日谈》。这些故事中除了对于现实生活的描写、爱情的称扬、商人的智慧和才干之外，同时对于当时的帝王、贵族、教会等等势力的黑暗面加以揭露讽刺。那么，现在躲避疫情而宅在家里的欧美人们，面对现在他们政府和精英阶层防疫的政策，是否会有所思考，而成就新一部《十日谈》呢？我们拭目以待。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2020/%E5%85%A8%E7%90%83%E6%96%B0%E5%86%A0%E8%82%BA%E7%82%8E%E7%9A%84%E6%89%A9%E6%95%A3%E4%B8%8E%E9%98%B2%E7%96%AB%E8%A7%82%E5%AF%9F/decameron.jpg!500x" alt="《十日谈》插画"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从一月开始蔓延的新冠病毒疫情至今已经两个多月了，本以为随着中国疫情的逐渐缓和，病毒蔓延得到了控制，生活也可以逐渐恢复正常了，谁知道本月以来疫情在全世界扩散开来。从一开始报道的韩国新天地教会疫情，到如今的美国、意大利确诊病例纷纷超越中国，形势也是越来越严峻。这个新冠肺炎疫情已经变成了一场影响全球经济社会发展的重大挑战。
    
    </summary>
    
    
      <category term="观察者" scheme="https://blog.dlzhang.com/overview/viewpoint/"/>
    
    
      <category term="政治" scheme="https://blog.dlzhang.com/overview/tags/%E6%94%BF%E6%B2%BB/"/>
    
      <category term="COVID19" scheme="https://blog.dlzhang.com/overview/tags/COVID19/"/>
    
      <category term="公共卫生" scheme="https://blog.dlzhang.com/overview/tags/%E5%85%AC%E5%85%B1%E5%8D%AB%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>出香港记</title>
    <link href="https://blog.dlzhang.com/posts/2019/%E5%87%BA%E9%A6%99%E6%B8%AF%E8%AE%B0/"/>
    <id>https://blog.dlzhang.com/posts/2019/%E5%87%BA%E9%A6%99%E6%B8%AF%E8%AE%B0/</id>
    <published>2019-12-13T11:38:00.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>简单记述一下上个月逃离香港的情况，既是记录自己的经历，也是为了留存历史。因为你怎么也想不到，在一个全球治安状况领先的地区，一个在全中国范围内都是最发达的城市之一，最后人们却需要因为社会动乱而被迫逃离。<a id="more"></a></p><p>香港民众反对《逃犯条例》修订的大规模抗议示威自6月18日冲击立法会开始，经过一个暑假的蔓延，情势已经有所缓和。但是，一切的缓和其实都是在为了11月份的立法会议员选举做铺垫和准备的。无论是元朗还是市区的冲突，说实话因为我们学校远离市区，所以如果不去市中心感受其实并不真切。</p><p>时间进入11月份，随着立法会选举的临近，事态陡然升级。最开始波及学校是从各大学的毕业典礼开始的，然后香港科技大学、香港城市大学先后发生了「黑衣人」与香港警察之间的冲突。在香港城市大学，甚至发生了冲击学生宿舍的可怕事件。</p><p>11月11日，星期一。那天因为要准备给学生监考 quiz 和上习题课，还特意起了个大早。然后就在手机上看到了港铁东铁线停止运营的消息，稍后就收到了学校宣布当天停课的通知。是日，有暴徒冲入学校范围，本校校内情况陡然紧张。</p><p>当天上午学校的情况还算良好，有小规模的「黑衣人」聚集，但是尚未发生比较激烈的冲突。因为有韩国学生当天下午要回国参加兵役体检，我还特地给该学生在善衡餐厅安排的提前考试。当天下午开始直到入夜，学校的情况开始恶化。</p><p>不过，我在白天学校路面情况比较稳定的时候还特地上山去学校超市采购了一些食物。但是，学校超市里速冻食品、蔬菜肉类等食材均已经被抢售一空。仅剩少量方便面、面包、饼干等食品，无奈买了一些回到宿舍，学校当天傍晚宣布次日继续停课。</p><p>11月12日，星期二。这一天自白天开始情况就十分严重，上午田径场跑道被点燃，黑烟漫天。其后更是传出惊人的消息，宿舍楼下体育器材室的弓箭被偷走了，幸好后来被及时追回。此外，善衡斜坡下去的十字路口下午也烧起大火冒出黑烟，斜坡上都是「黑衣人」、「记者」、警察的身影。傍晚，学校宣布次日继续停课。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2019/%E5%87%BA%E9%A6%99%E6%B8%AF%E8%AE%B0/playground.jpg!500x" alt="宿舍楼对面的操场"></p><p>当天晚上，舍监过来还特地询问来我们是否还有食物，没有的话她那边还有一些。当天我的食物储备已经不太充足，只能吃了一碗泡面当晚饭。新闻报道，因为宿舍附近通往科学园、横跨东铁线的「二号桥」上有人往铁轨扔东西威胁铁路运行，警察进入二号桥靠近学校一侧。由此，因为警察进入学校，学生开始与警察发生冲突。而因为本校部分校领导十分不靠谱的对话，不仅没能劝阻「黑衣人」，与警察之间的沟通也宣告失败。其后更有消息传出，前校长也来到学校开展协调，由此可见现任领导还不如一个前任（当然前任也没怎么协调沟通好）。</p><p>随着谈判、对话的破裂，双方开始了激烈的冲突。燃烧瓶和催泪弹互相投掷，我们在宿舍都能看到山坡下面火光冲天，而催泪烟一度弥漫进宿舍楼内部，烟雾报警器也一度报警，而宿舍楼下小广场作为大后方还有少量「黑衣人」坐着休整。和边上房间的同学沟通了一下，大家纷纷表示比较担心警察在深夜驱散的时候万一「黑衣人」企图退入宿舍楼就很危险。</p><p>因为白天还出现过一两名「黑衣人」进入宿舍楼，上到最高层眺望「侦查」的事情，我们也和宿舍管理人员、舍监等表明希望能够确保门禁的正常。当晚到凌晨，有同学选择连夜从学校39区旁的小门逃出去。考虑到夜晚冲突不断情况复杂，凌晨又交通不便，次日上午又还有要破坏市区公共交通的行动预告，我选择了第二天天亮了下午走。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2019/%E5%87%BA%E9%A6%99%E6%B8%AF%E8%AE%B0/pgh.jpg!500x" alt="12日下午宿舍楼下"></p><p>11月13日，星期三。出去时候还经过了前一晚的战场，「黑衣人」在那里吃午饭，而空气里弥漫着催泪烟的气味。不过，因为他们的主要目标是警察，如果不去主动招惹，在当时的情况下，我通过这片区域还是比较安全的。</p><p>当然在学校里，显然是打不到车了，有消息说科学园那边的水上码头有专门的船接送内地学生，不过考虑到距离有点远，我还是没有过去。从39区旁的小门出去走到科学园那边的时候发现，这边的居民区其实什么事情都没有，一切正常。就隔了一条铁路，这边是安静闲适甚至有人在遛狗、散步、健身，而那边却是烽火硝烟。没有坐地铁走罗湖落马洲去深圳，选择了直接打车去西九龙高铁站，坐高铁深圳福田，想着这有一地两检，过了边检就到了社会主义的怀抱。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2019/%E5%87%BA%E9%A6%99%E6%B8%AF%E8%AE%B0/west_kowloon.jpg!500x" alt="西九龙一地两检口岸管理线"></p><p>上了出租车后，司机师傅听闻我的情况，也是只能摇头，说我们还是回去吧，他对于香港这样的情况是十分得无奈。取票、安检、通过边境检查，顺利踏入内地口岸管理区的时候，整个人悬着的心瞬间就放了下来，想到这里有西九龙派出所的警察叔叔，就感到无比得安全和放心！</p><p>候车的时候，收到学校消息，宣布本学期直接结束，而其他高校也相继宣布停课。我顺利抵达深圳福田后，就和前一天已经撤离到深圳的小伙伴汇合，愉快地去吃了外婆家，感受到了中国特色社会主义先行示范区的活力和悠闲。在深圳待了两天发现香港局势短期无法稳定下来，就买了机票回家了。因为出来得急，过冬衣服都没带，还特地去优衣库买了裤子、外套。现在想想仅仅隔着一条深圳河，此岸是太平盛世，彼岸是烽火狼烟；而就在区区二三十年前，此岸的人还想着就算冒着生命危险也要逃去彼岸讨生活，不能不说是一种讽刺了。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2019/%E5%87%BA%E9%A6%99%E6%B8%AF%E8%AE%B0/shenzhen.jpg!500x" alt="深圳：中国特色社会主义先行示范区"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单记述一下上个月逃离香港的情况，既是记录自己的经历，也是为了留存历史。因为你怎么也想不到，在一个全球治安状况领先的地区，一个在全中国范围内都是最发达的城市之一，最后人们却需要因为社会动乱而被迫逃离。
    
    </summary>
    
    
      <category term="观察者" scheme="https://blog.dlzhang.com/overview/viewpoint/"/>
    
    
      <category term="香港" scheme="https://blog.dlzhang.com/overview/tags/%E9%A6%99%E6%B8%AF/"/>
    
      <category term="深圳" scheme="https://blog.dlzhang.com/overview/tags/%E6%B7%B1%E5%9C%B3/"/>
    
      <category term="政治" scheme="https://blog.dlzhang.com/overview/tags/%E6%94%BF%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>邻居们的例行晨会</title>
    <link href="https://blog.dlzhang.com/posts/2019/%E9%82%BB%E5%B1%85%E4%BB%AC%E7%9A%84%E4%BE%8B%E8%A1%8C%E6%99%A8%E4%BC%9A/"/>
    <id>https://blog.dlzhang.com/posts/2019/%E9%82%BB%E5%B1%85%E4%BB%AC%E7%9A%84%E4%BE%8B%E8%A1%8C%E6%99%A8%E4%BC%9A/</id>
    <published>2019-11-20T03:02:16.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<div class="note success"><p>即将搬离住了二十年的小区，重发这篇中学随笔，感受老邻居们的可爱与热情。</p></div><p>　　七八月份，大热天的，清晨太阳就老高了。起床了，待在家里吧，闷得慌；逛逛街购物呢，又太热。正好，我家门口有花坛、石凳，环境虽算不上雅致也还不错。花坛中浓密高大的树木的树叶丫杈交错重叠，虽没有喜鹊、杜鹃的鸣叫，但是有麻雀的嬉戏。<a id="more"></a><br>　　就这样，慢慢地，这儿便成了附近隔壁邻居们上午乘凉、聊天的好去处。聊聊天也不是仅仅关于家长里短的琐碎小事，奇闻轶事、道听途说的也有，还常常说说议议国家大事、时政要闻，为祖国的统一大业出出点子。要是等会儿再过来个三四岁的小孩，冲着他那可爱的模样，大家还会逗逗他，爽朗的笑声便像刚开的水沸腾开来。<br>　　后来啊，每天早上来这儿报到“开会”成了惯例，要是你哪天迟到了或是没有来，大家都要问问怎么回事儿呢！这不，到了暑假，即使老爸老妈不来催我起床，邻居们的侃大山似的“开会”的热情气氛也把我给“热”醒了。听——<br>　　“你家孩子考上了没有啊？”<br>　　“还不知道呢！你家的呢？”<br>　　“瞧，这不刚知道嘛！考上了，×××大学！这《都市快报》你拿去看看，上面有投档分数线。”<br>　　瞧，邮递员刚把印有我省高考文、理科地二批投档分数线的《都市快报》送到手上，尚未被录取的几位家有考生的家长们便急切地翻看查对。看到自己的孩子的分数达到了投档分数线，便立马掏出手机去告诉家长。<br>　　“喂，你快看看家里8月3日的《都市快报》有没有，那儿印有投档线！如果没有就快去买一份。”听听，这位妈妈已经急不可待了。<br>　　“没事儿，没事儿的，把这份拿去好了。” 《都市快报》的主人——一位大爷看着她急切的样子，便递给她报纸。边道谢边往家里赶，这位母亲拿着报纸快步跑着离开了我们的视线。哎，真是家有考生，可怜天下父母心啊！<br>　　过了会儿，渐渐地，来“与会”的人越来越多，椅凳便紧张起来。礼让一番当然是少不了的；但邻居们却认为增加移动的椅凳，治标不治本，纷纷为我家门口的“开会场所”改造出谋划策。<br>　　“这地儿太小了，你们应该多弄几个石凳。”<br>　　“不不，干脆把这棵桂花树砍了，把花坛用水泥抹平了，那地方不就大了三四倍了！”<br>　　“对对，还要再开个冷饮摊，卖卖冷饮，多好啊！”<br>　　天哪，竟然想到把长了十来年的桂花树给砍了当“开会场所”，这“规划局长”当得太荒唐了吧！可我家这些邻居就是这么热心肠：有点儿事都愿意帮，需要东西吧也都愿意借。连小贩卖肉卖菜的，也愿意常来，你说热不闹热闹？<br>　　“快中午了，我要回去做饭了，先走了啊。”<br>　　“我也回去了，饭还没做呢！”<br>　　随着太阳渐高，“会议”也就自然而然的散了。全国上下不是构建“和谐社会”吗？我看就凭这个，我们小区这些邻里就应该评为“和睦邻里模范”！</p><p align="right">本文写于2009年8月5日</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success&quot;&gt;&lt;p&gt;即将搬离住了二十年的小区，重发这篇中学随笔，感受老邻居们的可爱与热情。&lt;/p&gt;&lt;/div&gt;&lt;p&gt;　　七八月份，大热天的，清晨太阳就老高了。起床了，待在家里吧，闷得慌；逛逛街购物呢，又太热。正好，我家门口有花坛、石凳，环境虽算不上雅致也还不错。花坛中浓密高大的树木的树叶丫杈交错重叠，虽没有喜鹊、杜鹃的鸣叫，但是有麻雀的嬉戏。
    
    </summary>
    
    
      <category term="碎碎念" scheme="https://blog.dlzhang.com/overview/ramble/"/>
    
    
      <category term="中学" scheme="https://blog.dlzhang.com/overview/tags/%E4%B8%AD%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>上海市垃圾分类的一点想法</title>
    <link href="https://blog.dlzhang.com/posts/2019/%E4%B8%8A%E6%B5%B7%E5%B8%82%E5%9E%83%E5%9C%BE%E5%88%86%E7%B1%BB%E7%9A%84%E4%B8%80%E7%82%B9%E6%83%B3%E6%B3%95/"/>
    <id>https://blog.dlzhang.com/posts/2019/%E4%B8%8A%E6%B5%B7%E5%B8%82%E5%9E%83%E5%9C%BE%E5%88%86%E7%B1%BB%E7%9A%84%E4%B8%80%E7%82%B9%E6%83%B3%E6%B3%95/</id>
    <published>2019-07-07T06:33:43.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>注意到上海最近的垃圾分类引发了热烈讨论，其实我老家（包邮区某十八线小县城）早就实施了垃圾分类一年有余。当然没有上海这样细分，主要是分为「厨余垃圾」和「其他垃圾」两类，类似于上海的「干垃圾」和「湿垃圾」。家里主要是厨房设置两个垃圾桶，社区也会给每户门口配发两个垃圾桶，倒垃圾时候对应倒在两个垃圾桶里就可以了。实际体验上没有感觉到什么不方便的地方，基本上在家中扔垃圾时候就分类完成了。<a id="more"></a></p><p>上海的垃圾分类，主要麻烦其一在于四个分类中的「干垃圾」、「湿垃圾」的分类对于普通市民而言过于陌生和抽象，其二是定时投放垃圾对于许多白领而言不方便。对于前者，个人认为目前北京市计划制定的垃圾分类方法比较简单，也就是「有害垃圾」与「可回收垃圾」两类不变，另外两类改成「厨余垃圾」和「其他垃圾」，这样的概念对于普通市民是更容易理解接受的（虽然论垃圾后续分类处理而言上海的干湿垃圾分类更科学）。对于定时投放问题我觉得有关部门可能还需要制定更加灵活的收集垃圾方案来便利市民生活，比如有的社区每户配发了二维码不干胶可以粘贴在自己的垃圾袋上便于落实分类责任，比如延长夜间收集垃圾时间等等。</p><p>关注到一些人对于上海市垃圾分类政策以及后续要在全国铺开的垃圾分类举措颇有微词，但是要想想发达国家或许可以把垃圾运到发展中国家解决问题，但是中国的垃圾只可能是中国人自己来解决。上海市是全国经济中心也是经济最发达的地区之一，城市化率又很高，上海市可能是全国最容易推广垃圾分类政策的城市。中国社会能否推广垃圾分类政策，也许上海市的试点最能积累经验与教训。通过在上海这样的城市的垃圾分类试点可以让我们发现实际运行中的缺陷，在后续向省会级城市等地区铺开时候改进实施政策的不足。</p><p>垃圾分类处理回收，既可以回收再利用资源，又可以最大程度上减少环境破坏，或许在最初的习惯与制度培养建设上需要花一段时间，但是一旦建成将是造福未来的重要举措。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注意到上海最近的垃圾分类引发了热烈讨论，其实我老家（包邮区某十八线小县城）早就实施了垃圾分类一年有余。当然没有上海这样细分，主要是分为「厨余垃圾」和「其他垃圾」两类，类似于上海的「干垃圾」和「湿垃圾」。家里主要是厨房设置两个垃圾桶，社区也会给每户门口配发两个垃圾桶，倒垃圾时候对应倒在两个垃圾桶里就可以了。实际体验上没有感觉到什么不方便的地方，基本上在家中扔垃圾时候就分类完成了。
    
    </summary>
    
    
      <category term="观察者" scheme="https://blog.dlzhang.com/overview/viewpoint/"/>
    
    
      <category term="垃圾分类" scheme="https://blog.dlzhang.com/overview/tags/%E5%9E%83%E5%9C%BE%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>最近的台湾电视节目</title>
    <link href="https://blog.dlzhang.com/posts/2019/%E6%9C%80%E8%BF%91%E7%9A%84%E5%8F%B0%E6%B9%BE%E7%94%B5%E8%A7%86%E8%8A%82%E7%9B%AE/"/>
    <id>https://blog.dlzhang.com/posts/2019/%E6%9C%80%E8%BF%91%E7%9A%84%E5%8F%B0%E6%B9%BE%E7%94%B5%E8%A7%86%E8%8A%82%E7%9B%AE/</id>
    <published>2019-06-07T04:53:05.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>话说最近台湾的电视节目是越来越无聊了。闽南语本土剧《炮仔声》好好的剧情开始往不可控制的方向发展，剧情从最开始的温情路线走向了狗血，男主角女主角长期消失，男女配角倒是天天走主线剧情，渐渐主角化。我都怀疑是不是主角出场费太高了，少写些剧情可以省钱（误）。导致我现在都不看直播了，甚至都不去看完整的剧集，直接看网上的精剪版，而且居然也不影响追剧的节奏，也是很魔幻了。<a id="more"></a></p><p>而本来之前在关注的几个思路「比较正常」的政论节目《新闻深喉咙》、《少康战情室》也渐渐迷失了逻辑。前者的最强主持人平秀琳出走东森，导致该节目彻底「韩天化」。后者除了一贯以来以有色眼镜看大陆与香港外，也暗戳戳「捧郭踩韩」却口口声声坚持中立。</p><p>现在发现「<a href="https://www.youtube.com/channel/UCiOR3zQCU-tLza5g1MuqABA" target="_blank" rel="noopener">寰宇全視界</a>」这个节目似乎还不错，一周一更新，不像那些天天更新的节目般粗制滥造。而且，来宾有蓝有绿却都不极端偏激，讨论问题也不仅仅局限于岛内选举，会把很多时间用来讨论国际事务。</p><p>另外，王志郁小姐姐的在三立 iNEWS 上的《iNEWS 大世界》节目立场观点因为没有像三立一贯以来那样以有色眼镜看待大陆（<del>其实可能只是因为王志郁小姐姐的颜值吧</del>），意外地获得了大陆网友的广泛好评，正如大家评论所言「一三五吹、二四六贬」。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2019/%E6%9C%80%E8%BF%91%E7%9A%84%E5%8F%B0%E6%B9%BE%E7%94%B5%E8%A7%86%E8%8A%82%E7%9B%AE/huanyu.jpg!500x" alt="寰宇全視界"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;话说最近台湾的电视节目是越来越无聊了。闽南语本土剧《炮仔声》好好的剧情开始往不可控制的方向发展，剧情从最开始的温情路线走向了狗血，男主角女主角长期消失，男女配角倒是天天走主线剧情，渐渐主角化。我都怀疑是不是主角出场费太高了，少写些剧情可以省钱（误）。导致我现在都不看直播了，甚至都不去看完整的剧集，直接看网上的精剪版，而且居然也不影响追剧的节奏，也是很魔幻了。
    
    </summary>
    
    
      <category term="观察者" scheme="https://blog.dlzhang.com/overview/viewpoint/"/>
    
    
      <category term="台湾" scheme="https://blog.dlzhang.com/overview/tags/%E5%8F%B0%E6%B9%BE/"/>
    
      <category term="影视" scheme="https://blog.dlzhang.com/overview/tags/%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title>WWDC 2019 后的折腾</title>
    <link href="https://blog.dlzhang.com/posts/2019/WWDC2019%E5%90%8E%E7%9A%84%E6%8A%98%E8%85%BE/"/>
    <id>https://blog.dlzhang.com/posts/2019/WWDC2019%E5%90%8E%E7%9A%84%E6%8A%98%E8%85%BE/</id>
    <published>2019-06-04T08:30:53.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>大晚上看了一下 WWDC 2019 的直播，其中比较印象深刻的就是 iPad OS 和 macOS 之间的整合联动了。官方支持 iPad 成为 Mac 的扩展屏幕，而且 iPad 支持了读取 U 盘和非正式支持鼠标操作，分屏功能也更强大了，截图编辑功能也丰富了许多，感觉这几项更新大大提升了 iPad 生产力。<a id="more"></a></p><p>不过说到更新开发者版本的系统，以前只需要安装一个描述文件就可以升级了，结果这次 iPad OS 和 iOS 13 都不能这样操作了，大概是因为 bug 太多吧，所以只能下载固件手动更新系统了。反正对于主力机器手机和电脑我是不敢升级的，比较测试版 bug 满天飞，就把手头的 iPad Pro 升级了试试看。</p><p>升级完的感觉大概就两个字，真香！体验上很不错，就是个别地方还是存在一些 bug 的，但是不影响 iPad 的日常使用。手痒的我又想尝试升级一下 macOS，翻了一下 Twitter 和微博上升级后的体验，发现事情没有这么简单，特别是 OneDrive 似乎是无法在新系统下正常运行的。于是，成功被劝退，我还是等公众测试版发布了再更新吧。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2019/WWDC2019%E5%90%8E%E7%9A%84%E6%8A%98%E8%85%BE/iPadOS.jpg!350x" alt="iPad OS"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大晚上看了一下 WWDC 2019 的直播，其中比较印象深刻的就是 iPad OS 和 macOS 之间的整合联动了。官方支持 iPad 成为 Mac 的扩展屏幕，而且 iPad 支持了读取 U 盘和非正式支持鼠标操作，分屏功能也更强大了，截图编辑功能也丰富了许多，感觉这几项更新大大提升了 iPad 生产力。
    
    </summary>
    
    
      <category term="碎碎念" scheme="https://blog.dlzhang.com/overview/ramble/"/>
    
    
      <category term="软件" scheme="https://blog.dlzhang.com/overview/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="iPad" scheme="https://blog.dlzhang.com/overview/tags/iPad/"/>
    
  </entry>
  
  <entry>
    <title>深圳浙江菜探寻</title>
    <link href="https://blog.dlzhang.com/posts/2019/%E6%B7%B1%E5%9C%B3%E6%B5%99%E6%B1%9F%E8%8F%9C%E6%8E%A2%E5%AF%BB/"/>
    <id>https://blog.dlzhang.com/posts/2019/%E6%B7%B1%E5%9C%B3%E6%B5%99%E6%B1%9F%E8%8F%9C%E6%8E%A2%E5%AF%BB/</id>
    <published>2019-05-12T05:45:36.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>近日又去深圳觅食，说起来在香港确实很难吃到合口味的浙江菜了，深圳倒是挺多的。总体来说，几家源自浙江的连锁餐厅味道、价格方面都不错，是值得经常去品尝品尝的。<a id="more"></a></p><ul><li><strong>新白鹿</strong>：最佳的选择，物美价廉（见下图），而且点单结账都可以直接扫描餐桌上的二维码完成，简直是「社交恐惧症」患者的福音啊（笑）。</li><li><strong>外婆家</strong>：算是其中比较出名的一家，味道也是不错的，当然和新白鹿一样，就餐排队的也是很多。</li><li><strong>绿茶</strong>：比较不太好吃，，感觉网红的意味比较浓，知名度似乎蛮高的，但是菜单的菜品和口味都不是感觉很地道，因此不是很推荐。</li></ul><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2019/%E6%B7%B1%E5%9C%B3%E6%B5%99%E6%B1%9F%E8%8F%9C%E6%8E%A2%E5%AF%BB/SZ-Xinbailu.jpg!400x" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近日又去深圳觅食，说起来在香港确实很难吃到合口味的浙江菜了，深圳倒是挺多的。总体来说，几家源自浙江的连锁餐厅味道、价格方面都不错，是值得经常去品尝品尝的。
    
    </summary>
    
    
      <category term="碎碎念" scheme="https://blog.dlzhang.com/overview/ramble/"/>
    
    
      <category term="深圳" scheme="https://blog.dlzhang.com/overview/tags/%E6%B7%B1%E5%9C%B3/"/>
    
      <category term="美食" scheme="https://blog.dlzhang.com/overview/tags/%E7%BE%8E%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title>博客收到一笔巨额打赏</title>
    <link href="https://blog.dlzhang.com/posts/2019/%E5%8D%9A%E5%AE%A2%E6%94%B6%E5%88%B0%E4%B8%80%E7%AC%94%E5%B7%A8%E9%A2%9D%E6%89%93%E8%B5%8F/"/>
    <id>https://blog.dlzhang.com/posts/2019/%E5%8D%9A%E5%AE%A2%E6%94%B6%E5%88%B0%E4%B8%80%E7%AC%94%E5%B7%A8%E9%A2%9D%E6%89%93%E8%B5%8F/</id>
    <published>2019-04-21T06:06:20.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>昨天因为帮了一位小伙伴解决博客相册设置的一些问题，收到一笔巨额的打赏（人民币50元），真是至今收到的最大一笔打赏！十分感谢～ 说实话，本来开这个博客也没打算收钱，就是分享一些自己的心得体会、记录一些碎碎念罢了，现在能够因此得到别人的认可还是很开心的事情。<a id="more"></a></p><p>话说看着今天艳阳高照，对比之下昨天下午的雨特别大。暴雨如注有如「山竹」台风袭来时候的雨势，整个天都暗下来都差点感觉是傍晚了。暴雨结束就没有出门觅食的想法了，直接点了个外卖。说起香港的外卖，也是没脾气，确实不能和内地的外卖服务相比。无论如何，还算有几个还不错的外卖应用可以用，不出门能吃好吃的也是一件很开心的事情。而且可以换换口味也是蛮不错的，毕竟学校餐厅吃多了也会腻的。</p><p>另外，最近关注湾湾的大选，真是好戏连台，各种内斗互打不要太精彩，政治走到这样如此境界也是挺厉害的了，哈哈～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天因为帮了一位小伙伴解决博客相册设置的一些问题，收到一笔巨额的打赏（人民币50元），真是至今收到的最大一笔打赏！十分感谢～ 说实话，本来开这个博客也没打算收钱，就是分享一些自己的心得体会、记录一些碎碎念罢了，现在能够因此得到别人的认可还是很开心的事情。
    
    </summary>
    
    
      <category term="碎碎念" scheme="https://blog.dlzhang.com/overview/ramble/"/>
    
    
      <category term="打赏" scheme="https://blog.dlzhang.com/overview/tags/%E6%89%93%E8%B5%8F/"/>
    
  </entry>
  
  <entry>
    <title>建站简史</title>
    <link href="https://blog.dlzhang.com/posts/2019/%E5%BB%BA%E7%AB%99%E7%AE%80%E5%8F%B2/"/>
    <id>https://blog.dlzhang.com/posts/2019/%E5%BB%BA%E7%AB%99%E7%AE%80%E5%8F%B2/</id>
    <published>2019-04-03T15:06:20.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>很久以前（大概是小学时代），我学会了用 Frontpage 制作网页，但是没有能力把我的网站放到互联网上。自己最早的博客应该要算是新浪博客了，在中学时代就开通了。有模有样地发布了几篇自己写的作文，不过后来感觉编辑很麻烦，加上主题又不好看，所以就放弃了。之后简单地用过 <a href="http://www.lofter.com/" target="_blank" rel="noopener">Lofter</a> ，不过主题只适合放照片不适合展示文字。<a id="more"></a></p><p>在大学的时候转投了 <a href="https://www.weebly.com/" target="_blank" rel="noopener">Weebly</a> ，当年没被屏蔽，浏览起来也挺顺畅的，就尝试着建立了一个个人主页。后来给本科的科研训练团队做了一个蛮不错的团队形象展示网站。由于科研训练项目的结束以及 GFW 的屏蔽，Weebly 也就最终被抛弃了。</p><p>来了香港之后又试了试在 <a href="https://www.strikingly.com/" target="_blank" rel="noopener">Strikingly</a> 建立个人网站，但是免费版只是一个单页网站，有些内容展示起来不是很方便，只适合作为个人电子简历之类的用途。在使用 Strikingly 期间，尝试将 <a href="http://www.jianshu.com/" target="_blank" rel="noopener">简书</a> 作为个人博客。简书支持富文本模式和 Markdown 两种模式，但是感觉这个社区发布的很多都是一些文艺小清新的文字，首页推荐的也大多是这类，而且存在一大票僵尸粉。于是，转投 <a href="https://zhuanlan.zhihu.com/econramble" target="_blank" rel="noopener">知乎专栏</a> 。知乎专栏的互动效果明显好于简书，相关专业的知乎用户也蛮多的，而且编辑器用起来也比较顺手。</p><p>由于开设的知乎专栏主要局限于经济学领域，而且 Strikingly 也不是很好用，我开始探索其他工具、平台。找来找去感觉还是 GitHub Pages 上部署静态网页的方式好用。学术主页基于 Freelancer，参考了 <a href="http://www.sijichun.pro/" target="_blank" rel="noopener">Jichun Si</a> 的大致内容布局并进行了魔改。个人博客开始是基于 LoeiFy 设计的 <a href="https://github.com/LoeiFy/Mirror" target="_blank" rel="noopener">Mirror</a> 主题，使用 GitHub Issues 进行内容编辑。不过因为不能进行个性化设置，现在改成了被大家广泛使用的 Hexo NexT。</p><p>一直以来 GitHub Pages 拒绝百度搜索到爬虫，导致百度搜索对博客内容的收录极低。而且部署需要本地运行一次，或者是选择如 Travis CI 这类持续集成系统，偏偏最近部署一次特别慢，而且出现刚才提到的 bug。因此就想着是不是换一个页面生成方式，或者换一个部署的地方。无意中发现了 <a href="https://www.netlify.com" target="_blank" rel="noopener">Netlify</a>，该网站提供快速的静态网站生成和部署模式，实际体验来看生成和部署发布速度都很快，访问速度经过测试也没有很差，就迁移过去。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很久以前（大概是小学时代），我学会了用 Frontpage 制作网页，但是没有能力把我的网站放到互联网上。自己最早的博客应该要算是新浪博客了，在中学时代就开通了。有模有样地发布了几篇自己写的作文，不过后来感觉编辑很麻烦，加上主题又不好看，所以就放弃了。之后简单地用过 &lt;a href=&quot;http://www.lofter.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lofter&lt;/a&gt; ，不过主题只适合放照片不适合展示文字。
    
    </summary>
    
    
      <category term="碎碎念" scheme="https://blog.dlzhang.com/overview/ramble/"/>
    
    
      <category term="blog" scheme="https://blog.dlzhang.com/overview/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>唐马儒因无法偿还暴走漫画「卖身契」违约金而被起诉</title>
    <link href="https://blog.dlzhang.com/posts/2018/%E5%94%90%E9%A9%AC%E5%84%92%E5%9B%A0%E6%97%A0%E6%B3%95%E5%81%BF%E8%BF%98%E6%9A%B4%E6%BC%AB%E5%8D%96%E8%BA%AB%E5%A5%91%E8%BF%9D%E7%BA%A6%E9%87%91%E8%80%8C%E8%A2%AB%E8%B5%B7%E8%AF%89/"/>
    <id>https://blog.dlzhang.com/posts/2018/%E5%94%90%E9%A9%AC%E5%84%92%E5%9B%A0%E6%97%A0%E6%B3%95%E5%81%BF%E8%BF%98%E6%9A%B4%E6%BC%AB%E5%8D%96%E8%BA%AB%E5%A5%91%E8%BF%9D%E7%BA%A6%E9%87%91%E8%80%8C%E8%A2%AB%E8%B5%B7%E8%AF%89/</id>
    <published>2018-08-09T09:58:00.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>看了李迪与任剑的双方回应，大体上看清楚了事情的主要矛盾所在。暴漫作为一家初创公司在前期没法实现盈利，现金流有限，所以只能把主要资金用于扩大经营而无法给予公司主创人员合理的回报。公司只能压低员工工资降低成本，这个只要双方有共识，公平透明地签署合同，把薪资明确写在合同里是没有问题的（大家共同「用爱发电」）。<a id="more"></a></p><p>任剑说：「他只需要负责演出，而我们却需要为他铺垫未来，为他规划蓝图，为他启用所有编剧精益求精的完善人设。」这个辩护其实分明就是贬低了个人的价值与贡献，而扩大了公司编剧、创意等的作用。难道说，「唐马儒」这个角色有了一个好剧本、好创意之后，真的「只需要」负责演出就够了吗，观众只是喜欢「唐马儒」这个角色背后的创意还是对创意与演技完美结合的欣赏呢？毕竟头套形象「王尼玛」换了人只要头套和声线不变，他就还是「王尼玛」；可是「唐马儒」这个角色，换了演员他就不再是「唐马儒」了。</p><p>作为创业公司，你如果只能要求大家一起「用爱发电」，在给予低工资同时卖情怀、画大饼，不能给主创人员一些原始股份作为激励，或者在合约里承诺期权激励，员工出走也是刚刚好而已罢了。当然，上述的激励可能给了会留下来，也可能不愿意，但是这种做法算是创业公司以低薪留住重要初创员工的主要做法了。具体有没有给股权期权的细节任剑和李迪都没有披露，到底当时有没有提不知道，大概率是没有承诺。</p><p>暴漫公司应该思考一下，如何维护好公司一个真人 IP 的知识产权，这种真人演员离职就存在着公司知识产权受损的重要员工离职事情，暴漫如果真心想处理，就不会是低薪+画饼了，就应该是高薪或者低薪+期权激励的形式留住员工。既然没有留住，公司也要承担可能被员工冒用公司 IP 形象的风险，现在这种一地鸡毛的情况，站在暴漫公司角度，当初其实是可以避免的。</p><p>当然，如果员工未经公司同意，私自用公司的知识产权盈利也是不对的。其中可能是主观故意擅自使用「唐马儒」等进行的个人盈利；也可能是因为李迪和「唐马儒」联系确实很紧密，所以，他的一些个人商业行为或多或少被人与「唐马儒」联系了起来，从而侵害了暴漫的权益，但是在这方面李迪又没有及时制止。其中的细节可能就是各说各话了，外人应该也很难厘清事情的细节，不过事实上就是李迪在诉讼上败诉了，他侵害了暴漫公司的知识产权。不过也要想想看，这个事情的诱因是对员工的报酬太低，毕竟人也是要生活的。</p><p>结合知乎关于为什么离职暴漫的问题，可见作为一家创业公司，在「员工的激励」、「知识产权管理」两方面都是有问题，但是好像任剑在回应里没有提及这几个方面。暴漫在《暴走大事件》中树立的正面形象与该公司与员工的奖励激励制度上的落差，可能会给公司形象带来继王尼玛头套争议、豫章书院节目下架事件、诋毁英烈事件后又一次的伤害吧。</p><p>最后谈谈与本题无关的关于《暴走大事件》的一些内容。</p><p>很多暴漫的观众是不会主动去看主流媒体（对，就是被某些人认为的所谓「只报喜不报忧」的「党媒」），所以主流媒体的客观报道和舆论导向根本无法进入他们的视野。《暴走大事件》在比如B站上的一些新闻（特别是负面）评论、点评看似泼辣犀利，实则在很多主流媒体上也是稀松平常，并不是禁忌。</p><p>当你看看在B站一些主流媒体新闻视频的弹幕里出现「哇，我竟然在B站看新闻」之类，或者「哇，这个也能报道」之类就可见一般，事实上是B站并不只有他们喜欢的二次元，主流媒体也并不忌讳触及一些社会的不足之处。</p><p>但是因为一些观众平时是不会看主流媒体的，当他们第一次接触到这样的新闻评论时候，当然会觉得「哇，好犀利的点评」、「此生无悔入暴漫」等等，一下把《暴走大事件》作为了意见领袖，可是其中的舆论导向是否真的是客观公正就有待商榷了。不可否认，《暴走大事件》这个节目的形式与创意很棒，在脱口秀节目中制作也十分优秀，但是后期的制作与创意上，对话题和舆论导向上的把握失控也显示出暴漫在舆论导向、话题引领、价值观判断上的不成熟。</p><p><a href="https://www.zhihu.com/question/289038139/answer/464755383" target="_blank" rel="noopener">阅读知乎原文</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了李迪与任剑的双方回应，大体上看清楚了事情的主要矛盾所在。暴漫作为一家初创公司在前期没法实现盈利，现金流有限，所以只能把主要资金用于扩大经营而无法给予公司主创人员合理的回报。公司只能压低员工工资降低成本，这个只要双方有共识，公平透明地签署合同，把薪资明确写在合同里是没有问题的（大家共同「用爱发电」）。
    
    </summary>
    
    
      <category term="观察者" scheme="https://blog.dlzhang.com/overview/viewpoint/"/>
    
    
      <category term="法律" scheme="https://blog.dlzhang.com/overview/tags/%E6%B3%95%E5%BE%8B/"/>
    
      <category term="综艺" scheme="https://blog.dlzhang.com/overview/tags/%E7%BB%BC%E8%89%BA/"/>
    
  </entry>
  
  <entry>
    <title>在线发布文章的排版规范</title>
    <link href="https://blog.dlzhang.com/posts/2018/%E5%9C%A8%E7%BA%BF%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%E7%9A%84%E6%8E%92%E7%89%88%E8%A7%84%E8%8C%83/"/>
    <id>https://blog.dlzhang.com/posts/2018/%E5%9C%A8%E7%BA%BF%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%E7%9A%84%E6%8E%92%E7%89%88%E8%A7%84%E8%8C%83/</id>
    <published>2018-06-19T04:59:31.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>屏幕中文章的显示效果其实和书面纸质化的效果有比较大的差异，因此原本的书写与排版规则可能在实际的博客写作中不太适用了。所以这里参考其他人所提倡的网页文字的中西文排版格式，自己设定了一些基本的规范，主要参考了 <a href="https://www.zhihu.com/question/20414919/answer/95068251" target="_blank" rel="noopener">知乎的问题修改规范有哪些</a>。<a id="more"></a></p><h2 id="1-标点符号"><a href="#1-标点符号" class="headerlink" title="1. 标点符号"></a>1. 标点符号</h2><h3 id="1-1-全角与半角"><a href="#1-1-全角与半角" class="headerlink" title="1.1 全角与半角"></a>1.1 全角与半角</h3><ul><li>如果西文占主要内容，则除引用原文外，采用半角标点符号；</li><li>如果中文占主要内容，则除引用原文外，采用全角标点符号；</li><li>但是如果用于特别的段落，以便开头空两格，则可以在西文中使用全角空格。</li></ul><h3 id="1-2-引号"><a href="#1-2-引号" class="headerlink" title="1.2 引号"></a>1.2 引号</h3><ul><li>中英混排时使用直角引号，先单引号 <code>「 」</code> 再双引号 <code>『 』</code>，但正式行文除外（见 3.1）；</li><li>单独英文时使用 <code>&quot; &quot;</code> 或 <code>&#39; &#39;</code>，先用双引号，再单引号；</li><li>间接引用中，引号内句末的句号、问号、感叹号等标点符号应去掉。</li></ul><h3 id="1-3-分号"><a href="#1-3-分号" class="headerlink" title="1.3 分号"></a>1.3 分号</h3><ul><li>在使用项目符或者顺序列表的并列句中，前几项结尾以分号结束，最后一项以句号结束，各项之间采用逗号或者顿号分句或者分词，例如上述几个规范的罗列。</li></ul><h3 id="1-4-括号与书名号"><a href="#1-4-括号与书名号" class="headerlink" title="1.4 括号与书名号"></a>1.4 括号与书名号</h3><ul><li>中文书名、篇名、报纸名、杂志名、歌曲名、影剧名和图表名，用书名号 <code>《 》</code> 或 <code>&lt; &gt;</code>，先用前者，再用后者；</li><li>西文书名、篇名、报纸名、杂志名、歌曲名、影剧名和图表名，用斜体标识；</li><li>括号用作注明翻译或原文时应置于书名号外。</li></ul><h2 id="2-空格"><a href="#2-空格" class="headerlink" title="2. 空格"></a>2. 空格</h2><h3 id="2-1-段落中相间"><a href="#2-1-段落中相间" class="headerlink" title="2.1 段落中相间"></a>2.1 段落中相间</h3><ul><li>中西文（和其他西文半角符号、行内公式）间留一个半角空格；</li><li>中文和阿拉伯数字之间同样需留一个半角空格；</li><li>超链接文字的前后需留一个半角空格，但与标点符号之间不用留空格，避免断行时行首出现标点符号；</li><li>行内代码的前后不用留空格；</li><li>中文文字与全角标点符号之间不需要空格。</li></ul><h3 id="2-2-分级标题"><a href="#2-2-分级标题" class="headerlink" title="2.2 分级标题"></a>2.2 分级标题</h3><ul><li>采用阿拉伯数字作为分级标题；</li><li>一级标题为：<code>1.</code>、<code>2.</code>、<code>3.</code>，数字加半角句号，并与标题文字间留一个半角空格；</li><li>二级标题为：<code>1.1</code>、<code>1.2</code>、<code>1.3</code>，一级标题序号与二级标题序号间用半角句号相隔，结尾无半角句号，并与标题文字间留一个半角空格；</li><li>三级标题为：<code>1.1.1</code>、<code>2.1.3</code>，尽量不采用三级标题，而用段首加粗文字等形式实现。</li></ul><h2 id="3-段落"><a href="#3-段落" class="headerlink" title="3. 段落"></a>3. 段落</h2><h3 id="3-1-分段"><a href="#3-1-分段" class="headerlink" title="3.1 分段"></a>3.1 分段</h3><ul><li>原则上开头不空两格全角空格，直接顶格，并在段落间空一行；</li><li>正式行文时，采用开头空两格全角空格，段落间不空行的排版；</li><li>在 Markdown 写作中，独立成行的公式前后不空行。</li></ul><h3 id="3-2-断行"><a href="#3-2-断行" class="headerlink" title="3.2 断行"></a>3.2 断行</h3><ul><li>行首避免出现如逗号、句号、分号、感叹号、问号、省略号、顿号、后引号、后括号、后书名号等表示词语或句子结尾的标点符号，前括号、前书名号、前引号等可以出现在行首；</li><li>断行时应该注意尽量不要让末行只有几个字成行。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;屏幕中文章的显示效果其实和书面纸质化的效果有比较大的差异，因此原本的书写与排版规则可能在实际的博客写作中不太适用了。所以这里参考其他人所提倡的网页文字的中西文排版格式，自己设定了一些基本的规范，主要参考了 &lt;a href=&quot;https://www.zhihu.com/question/20414919/answer/95068251&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;知乎的问题修改规范有哪些&lt;/a&gt;。
    
    </summary>
    
    
      <category term="随手记" scheme="https://blog.dlzhang.com/overview/note/"/>
    
    
      <category term="清单" scheme="https://blog.dlzhang.com/overview/tags/%E6%B8%85%E5%8D%95/"/>
    
      <category term="排版" scheme="https://blog.dlzhang.com/overview/tags/%E6%8E%92%E7%89%88/"/>
    
  </entry>
  
  <entry>
    <title>MacBook Pro 显示「不在充电」的解决方法</title>
    <link href="https://blog.dlzhang.com/posts/2018/MacBook-Pro-%E6%97%A0%E6%B3%95%E5%85%85%E7%94%B5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://blog.dlzhang.com/posts/2018/MacBook-Pro-%E6%97%A0%E6%B3%95%E5%85%85%E7%94%B5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2018-06-15T13:24:43.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>刚才发现我的 MacBook Pro 电池显示「Battery is not charging」，而且电量也从100%下降到了92%，不过依然是显示「Power Source: Power Adapter」。因为用 HDMI 线外接了一台 Dell 的显示器，所以一开始是怀疑用电量大于充电量导致的。不过无论是否连接外接显示器，都是一样的不在充电，即使插拔了电源插头也是如此。<a id="more"></a></p><p>无奈给 Apple 支援热线打电话咨询，Apple 支援的客服给出了三个解决方案：</p><ul><li>重启大法好</li><li>把电源插头直接接入墙壁的插座，确认是否是电压问题</li><li>关机拔掉电源，按住 <code>shift</code> + <code>control</code> + <code>option</code> + 开机键（指纹识别处）连续十秒，然后开机</li></ul><p>尝试了前两个方法均告失败，尝试第三个方法开机后一开始还是显示「Battery is not charging」，不过很快就变成了下面这样：</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2018/MacBook-Pro-%E6%97%A0%E6%B3%95%E5%85%85%E7%94%B5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/battery.png!500x" alt="电池状态"></p><p>本来以为没用多久的电脑硬件出问题该去 Genius Bar 维修了，不过现在看来是软件问题就不用担心了。顺便说，苹果的售后和客服质量还是相当不错的，每次体验都还符合期待。另外记录一下，万一哪天 macOS 又抽风出问题了可以按照同样方法解决。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚才发现我的 MacBook Pro 电池显示「Battery is not charging」，而且电量也从100%下降到了92%，不过依然是显示「Power Source: Power Adapter」。因为用 HDMI 线外接了一台 Dell 的显示器，所以一开始是怀疑用电量大于充电量导致的。不过无论是否连接外接显示器，都是一样的不在充电，即使插拔了电源插头也是如此。
    
    </summary>
    
    
      <category term="随手记" scheme="https://blog.dlzhang.com/overview/note/"/>
    
    
      <category term="技术" scheme="https://blog.dlzhang.com/overview/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="MacBook" scheme="https://blog.dlzhang.com/overview/tags/MacBook/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT 博客增加知乎豆瓣图标支持</title>
    <link href="https://blog.dlzhang.com/posts/2018/Hexo-NexT-%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%9F%A5%E4%B9%8E%E8%B1%86%E7%93%A3%E5%9B%BE%E6%A0%87%E6%94%AF%E6%8C%81/"/>
    <id>https://blog.dlzhang.com/posts/2018/Hexo-NexT-%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%9F%A5%E4%B9%8E%E8%B1%86%E7%93%A3%E5%9B%BE%E6%A0%87%E6%94%AF%E6%8C%81/</id>
    <published>2018-06-12T20:21:54.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>因为 Hexo NexT 原始主题是采用了 Font Awesome 图标，并未包含如知乎、豆瓣这类中国大陆的社交网站图标。所以需要加入另一种图标的支持，使得博客可以显示出知乎、豆瓣这类的图标。<a id="more"></a></p><ul><li>感谢评论区 jqgsninimo 提供的<a href="/posts/89dad1c1/#5c23395f1579a3005f18ede7">改进</a>，方法更佳简单明了，本文已经更新该方法。</li><li>CSS 自定义文件指 <code>/source/_data/styles.styl</code></li><li>本文适用于 Hexo 4.2.0 / NexT 7.7.1</li></ul><h2 id="1-下载图标"><a href="#1-下载图标" class="headerlink" title="1. 下载图标"></a>1. 下载图标</h2><p>首先，前往 <a href="http://www.iconfont.cn/" target="_blank" rel="noopener">阿里巴巴矢量库</a> 挑选需要的图标，在图标上点击 <i class="fas fa-shopping-cart"></i> 加入购物车。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2018/Hexo-NexT-%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%9F%A5%E4%B9%8E%E8%B1%86%E7%93%A3%E5%9B%BE%E6%A0%87%E6%94%AF%E6%8C%81/iconfont.png!500x" alt="阿里巴巴矢量库"></p><p>然后，点击页面右上方 <i class="fas fa-shopping-cart"></i> 进入购物车，选择「下载代码」。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2018/Hexo-NexT-%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%9F%A5%E4%B9%8E%E8%B1%86%E7%93%A3%E5%9B%BE%E6%A0%87%E6%94%AF%E6%8C%81/download.png!300x" alt="购物车下载代码"></p><p>将下载的文件解压后，找到 <code>iconfont.css</code> 文件，打开后将其中的所有内容都复制加入到主题 CSS 自定义文件中的任意位置。这里需要修改部分内容，使得图标样式可以和主题样式保持一致。在这样设置好以后，就可以在博客需要额外图标的地方使用 <code>&lt;i class=&quot;iconfont icon-xxx&quot;&gt;&lt;/i&gt;</code> 的进行引用了。</p><p>但是这里有一个问题，如果想在侧边栏的社交网站列表里加入知乎、豆瓣这类图标，就不是这样引用了。因为主题配置文件中，对侧边栏的社交网站图标的引用省略了 <code>class</code> 的部分内容，将其加入到了 <code>layout</code> 的模版里，所以现在不能直接填写 <code>zhihu</code> 或者 <code>icon-zhihu</code> 到主题配置文件中，所以我们需要重新设置一下自定义样式。</p><h2 id="2-自定义样式配置"><a href="#2-自定义样式配置" class="headerlink" title="2. 自定义样式配置"></a>2. 自定义样式配置</h2><p>因为阿里巴巴矢量库里有多个知乎、豆瓣的图标，大小不一，即使设置了字体大小页可能无法和原始图像大小一致，这让强迫症的我不能忍，经过仔细挑选我终于找到了合适大小的两个图标。在主题 CSS 自定义文件中可以直接加入以下内容：</p><figure class="highlight css"><figcaption><span>/source/_data/styles.styl</span></figcaption><table><tr><td class="code"><pre><span class="line">//知乎豆瓣图标 font-class引用</span><br><span class="line"><span class="keyword">@font-face</span> &#123;<span class="attribute">font-family</span>: <span class="string">"iconfont"</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'iconfont.eot?t=1528847148903'</span>); <span class="comment">/* IE9*/</span></span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'iconfont.eot?t=1528847148903#iefix'</span>) <span class="built_in">format</span>(<span class="string">'embedded-opentype'</span>), <span class="comment">/* IE6-IE8 */</span></span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'data:application/x-font-woff;charset=utf-8;base64,d09GRgABAAAAAAYUAAsAAAAACIgAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADMAAABCsP6z7U9TLzIAAAE8AAAARAAAAFZW7kimY21hcAAAAYAAAABmAAABnM+nbGdnbHlmAAAB6AAAAigAAAJIGJn6FGhlYWQAAAQQAAAALwAAADYRrDxZaGhlYQAABEAAAAAcAAAAJAfeA4VobXR4AAAEXAAAABAAAAAQD+kAAGxvY2EAAARsAAAACgAAAAoBmgDsbWF4cAAABHgAAAAfAAAAIAETAF1uYW1lAAAEmAAAAUUAAAJtPlT+fXBvc3QAAAXgAAAAMQAAAEIxfhjKeJxjYGRgYOBikGPQYWB0cfMJYeBgYGGAAJAMY05meiJQDMoDyrGAaQ4gZoOIAgCKIwNPAHicY2Bk/sU4gYGVgYOpk+kMAwNDP4RmfM1gxMjBwMDEwMrMgBUEpLmmMDgwVDzbxdzwv4EhhrmBoQEozAiSAwAx0A0oeJzFkNEJwCAMRC/GFikdpZ+lOE+/OoKzOVDWsEn0xwk8eTE5DiIC2ACwcikRoA8E06suuc843I94dE56gt5FstTWps5EnkjesSVpxzLRutWzTq/3mOy/y0CfKLljvtQOwg+NwxM7AAB4nB3PzWvTcBjA8d/z+zVJX5MmaV6aNk2T2KZbu9Y1bWqna1mVwqas9QVlB6F1Igi+4GkwBu6gIOhh1wq+IMIEbx487aCC4MF/wKO6g568emk03cP38PBcHj6IQujfd3JAVCSiElpEZ9AQIaDLYLFYB9NpVHEZJJOSlBRLHNsxGduqkmVQLDol171GUaEZmgMWcuCadc+pYgeajQ4+CXVZB0hntItCISuQPYiqTu6hv4ZfgWTYWa6z4K9Wuql6XgxvxQUhLQhPwjRFhTEOcSzcVuQIFYnS/muK06QDYw4bEE872rmNRD4jjB817ugFJQKwuwtiJs/ud3mND9rRZFFIM8lEWNUS9rEUbB3GVDGuF3+iYEhg/Uw+kC46hU6jtcDpVqEMXhfcRtExO9AqHmForxXsriIzNguSywITRMuzY5DSgRowXkvkXaXl8sRmHJt3YfQRC3if4NALOuH/ApmnLqQVVcfZWLzNXcEY3oncV0bm5M5lgucXzueSucQbzMZ25gXqd1/ffro63FTTh7BuFVZWxtQSFdqwQsbw0uJSJESRcnt7PZNs4spVo3KtDzGCS+382dIn3K08Nroe3J9uDof42fRtr4ejM2voCLxHZmoRKUhHSDQlE7yW4/Im7zKyYktmE5qmBIGdZh7gv9Mwtmrl5XvTl7eWj1f+kPx0Au/9b7U2XC/1CBpMn/dHc3DC/1LqjwcDyE0m/o+7oxs3g0//AcOlaXN4nGNgZGBgAGI3hpVx8fw2Xxm4WRhA4LpbjQ6C/n+UhYHZHsjlYGACiQIA9CsInAB4nGNgZGBgbvjfwBDDwgACQJKRARWwAABHCgJtBAAAAAPpAAAEAAAABAAAAAAAAAAAdgDsASQAAHicY2BkYGBgYQhkYGUAASYg5gJCBob/YD4DABESAXEAeJxlj01OwzAQhV/6B6QSqqhgh+QFYgEo/RGrblhUavdddN+mTpsqiSPHrdQDcB6OwAk4AtyAO/BIJ5s2lsffvHljTwDc4Acejt8t95E9XDI7cg0XuBeuU38QbpBfhJto41W4Rf1N2MczpsJtdGF5g9e4YvaEd2EPHXwI13CNT+E69S/hBvlbuIk7/Aq30PHqwj7mXle4jUcv9sdWL5xeqeVBxaHJIpM5v4KZXu+Sha3S6pxrW8QmU4OgX0lTnWlb3VPs10PnIhVZk6oJqzpJjMqt2erQBRvn8lGvF4kehCblWGP+tsYCjnEFhSUOjDFCGGSIyujoO1Vm9K+xQ8Jee1Y9zed0WxTU/3OFAQL0z1xTurLSeTpPgT1fG1J1dCtuy56UNJFezUkSskJe1rZUQuoBNmVXjhF6XNGJPyhnSP8ACVpuyAAAAHicY2BigAAuBuyAhZGJkZmRhZGVgbGCtSojM6OUpzgjsShVNyW/NCkxj4EBAF/8B44AAAA='</span>) <span class="built_in">format</span>(<span class="string">'woff'</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'iconfont.ttf?t=1528847148903'</span>) <span class="built_in">format</span>(<span class="string">'truetype'</span>), <span class="comment">/* chrome, firefox, opera, Safari, Android, iOS 4.2+*/</span></span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'iconfont.svg?t=1528847148903#iconfont'</span>) <span class="built_in">format</span>(<span class="string">'svg'</span>); <span class="comment">/* iOS 4.1- */</span></span><br><span class="line">&#125;</span><br><span class="line">//以上是下载来自阿里巴巴矢量库的图标数据</span><br><span class="line">//以下代码相对下载下来的代码做了部分修改</span><br><span class="line"><span class="selector-class">.fa-custom</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>:<span class="string">"iconfont"</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">font-size</span>:inherit;</span><br><span class="line">  <span class="attribute">font-style</span>:normal;</span><br><span class="line">  <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">  <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.zhihu</span><span class="selector-pseudo">:before</span> &#123; <span class="attribute">content</span>: <span class="string">"\e6ba"</span>; &#125;</span><br><span class="line"><span class="selector-class">.douban</span><span class="selector-pseudo">:before</span> &#123; <span class="attribute">content</span>: <span class="string">"\e638"</span>; &#125;</span><br></pre></td></tr></table></figure><p>因为这里利用到了主题注入功能，所以需要在<strong>主题配置文件</strong>启用该功能：</p><figure class="highlight diff"><figcaption><span>/themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"> custom_file_path:</span><br><span class="line"><span class="deletion">-  #style: source/_data/styles.styl</span></span><br><span class="line"><span class="addition">+  style: source/_data/styles.styl</span></span><br></pre></td></tr></table></figure><h2 id="3-图标的应用"><a href="#3-图标的应用" class="headerlink" title="3. 图标的应用"></a>3. 图标的应用</h2><p>举个例子，在主题配置文件中，社交账号图标设置好以后，类似是以下这样的格式：</p><figure class="highlight yaml"><figcaption><span>/themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">Twitter:</span> <span class="string">https://twitter.com/user_id</span> <span class="string">||</span> <span class="string">twitter</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/user_id</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">Zhihu:</span> <span class="string">https://www.zhihu.com/people/user_id</span> <span class="string">||</span> <span class="string">custom</span> <span class="string">zhihu</span></span><br><span class="line">  <span class="attr">Douban:</span> <span class="string">https://www.douban.com/people/user_id/</span> <span class="string">||</span> <span class="string">custom</span> <span class="string">douban</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为 Hexo NexT 原始主题是采用了 Font Awesome 图标，并未包含如知乎、豆瓣这类中国大陆的社交网站图标。所以需要加入另一种图标的支持，使得博客可以显示出知乎、豆瓣这类的图标。
    
    </summary>
    
    
      <category term="随手记" scheme="https://blog.dlzhang.com/overview/note/"/>
    
    
      <category term="blog" scheme="https://blog.dlzhang.com/overview/tags/blog/"/>
    
      <category term="技术" scheme="https://blog.dlzhang.com/overview/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="CSS" scheme="https://blog.dlzhang.com/overview/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT 博客增加瀑布流相册页面</title>
    <link href="https://blog.dlzhang.com/posts/2018/Hexo-NexT-%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%80%91%E5%B8%83%E6%B5%81%E7%9B%B8%E5%86%8C%E9%A1%B5%E9%9D%A2/"/>
    <id>https://blog.dlzhang.com/posts/2018/Hexo-NexT-%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%80%91%E5%B8%83%E6%B5%81%E7%9B%B8%E5%86%8C%E9%A1%B5%E9%9D%A2/</id>
    <published>2018-06-11T04:24:01.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>要展示自己拍摄的照片，可以给博客添加一个瀑布流的相册页面。本文适用于 Hexo 4.2.0 / NexT 7.8.0，参考了 <a href="https://asdfv1929.github.io/2018/05/26/next-add-photos/" target="_blank" rel="noopener">asdfv1929 的方法</a>。<a id="more"></a></p><h2 id="1-json-文件处理图片信息"><a href="#1-json-文件处理图片信息" class="headerlink" title="1. json 文件处理图片信息"></a>1. json 文件处理图片信息</h2><p>在博客根目录的 <code>/scripts/</code> 文件夹下新建一个 <code>phototool.js</code> 文件，内容如下。主要功能是访问照片文件夹，获取每张照片的大小和文件名，并生成对应的 <code>json</code> 文件：</p><figure class="highlight js"><figcaption><span>/scripts/phototool.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line">    <span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line">    <span class="keyword">const</span> sizeOf = <span class="built_in">require</span>(<span class="string">'image-size'</span>);</span><br><span class="line">    <span class="comment">//本地照片所在目录</span></span><br><span class="line">    <span class="keyword">const</span> path = <span class="string">"source/photos/images"</span>; </span><br><span class="line">    <span class="comment">//要放置生成的照片信息文件目录，建议直接放在 source/photos/ 文件夹下</span></span><br><span class="line">    <span class="keyword">const</span> output = <span class="string">"source/photos/photoslist.json"</span>;</span><br><span class="line">    <span class="keyword">var</span> dimensions;</span><br><span class="line">    fs.readdir(path, <span class="function"><span class="keyword">function</span> (<span class="params">err, files</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> arr = [];</span><br><span class="line">        (<span class="function"><span class="keyword">function</span> <span class="title">iterator</span>(<span class="params">index</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (index == files.length) &#123;</span><br><span class="line">                fs.writeFileSync(output, <span class="built_in">JSON</span>.stringify(arr, <span class="literal">null</span>, <span class="string">"\t"</span>));</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            fs.stat(path + <span class="string">"/"</span> + files[index], <span class="function"><span class="keyword">function</span> (<span class="params">err, stats</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (stats.isFile()) &#123;</span><br><span class="line">                    dimensions = sizeOf(path + <span class="string">"/"</span> + files[index]);</span><br><span class="line">                    <span class="built_in">console</span>.log(dimensions.width, dimensions.height);</span><br><span class="line">                    arr.push(dimensions.width + <span class="string">'.'</span> + dimensions.height + <span class="string">' '</span> + files[index]);</span><br><span class="line">                &#125;</span><br><span class="line">                iterator(index + <span class="number">1</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;(<span class="number">0</span>));</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>创建好并把照片放在目录后，执行以下命令：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;folder-path&gt;  <span class="comment">#定位到 Hexo 博客目录</span></span><br><span class="line">yarn add image-size <span class="comment">#或者 npm install image-size --save</span></span><br><span class="line">node scripts/phototool.js  <span class="comment">#生成对应的 json 文件</span></span><br></pre></td></tr></table></figure><p><code>node scripts/phototool.js</code> 这个步骤以后可以不用手动执行，每次 <code>hexo s</code> 或者 <code>hexo deploy</code> 时候会被自动执行。如果报错，请注意检查保存本地照片的文件夹里有没有非图片类文件，特别是要删除如 <code>.DS_Store</code> 这样的隐藏文件。<code>json</code> 文件样例如下：</p><figure class="highlight json"><figcaption><span>/source/photos/photoslist.json</span></figcaption><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">true<span class="string">"4032.3024 IMG_0391.JPG"</span>,</span><br><span class="line">true<span class="string">"12500.3874 IMG_0404.JPG"</span>,</span><br><span class="line">true<span class="string">"4032.3024 IMG_0416.JPG"</span>,</span><br><span class="line">true<span class="string">"4032.3024 IMG_0424.JPG"</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="2-加载-js-文件"><a href="#2-加载-js-文件" class="headerlink" title="2. 加载 js 文件"></a>2. 加载 js 文件</h2><p>首先，在 <code>/source/js/</code> 目录下创建 <code>photo.js</code>：</p><figure class="highlight js"><figcaption><span>/source/js/photo.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> imgDataPath = <span class="string">'/photos/photoslist.json'</span>; <span class="comment">//图片名称高宽信息json文件路径</span></span><br><span class="line"><span class="keyword">var</span> imgPath = <span class="string">'/images/photos/'</span>;  <span class="comment">//图片访问路径</span></span><br><span class="line"><span class="keyword">var</span> imgMaxNum = <span class="number">50</span>; <span class="comment">//图片显示数量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> windowWidth = <span class="built_in">window</span>.innerWidth</span><br><span class="line">|| <span class="built_in">document</span>.documentElement.clientWidth</span><br><span class="line">|| <span class="built_in">document</span>.body.clientWidth;</span><br><span class="line"><span class="keyword">if</span> (windowWidth &lt; <span class="number">768</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> imageWidth = <span class="number">145</span>; <span class="comment">//图片显示宽度(手机端)</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> imageWidth = <span class="number">215</span>; <span class="comment">//图片显示宽度</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">photo = &#123;</span><br><span class="line">    page: <span class="number">1</span>,</span><br><span class="line">    offset: imgMaxNum,</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">        $.getJSON(imgDataPath, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            that.render(that.page, data);</span><br><span class="line">            <span class="comment">//that.scroll(data);</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    render: <span class="function"><span class="keyword">function</span> (<span class="params">page, data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> begin = (page - <span class="number">1</span>) * <span class="keyword">this</span>.offset;</span><br><span class="line">        <span class="keyword">var</span> end = page * <span class="keyword">this</span>.offset;</span><br><span class="line">        <span class="keyword">if</span> (begin &gt;= data.length) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">var</span> html, imgNameWithPattern, imgName, imageSize, imageX, imageY, li = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = begin; i &lt; end &amp;&amp; i &lt; data.length; i++) &#123;</span><br><span class="line">           imgNameWithPattern = data[i].split(<span class="string">' '</span>)[<span class="number">1</span>];</span><br><span class="line">           imgName = imgNameWithPattern.split(<span class="string">'.'</span>)[<span class="number">0</span>]</span><br><span class="line">           imageSize = data[i].split(<span class="string">' '</span>)[<span class="number">0</span>];</span><br><span class="line">           imageX = imageSize.split(<span class="string">'.'</span>)[<span class="number">0</span>];</span><br><span class="line">           imageY = imageSize.split(<span class="string">'.'</span>)[<span class="number">1</span>];</span><br><span class="line">            li += <span class="string">'&lt;div class="card" style="width:'</span> + imageWidth + <span class="string">'px" &gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;div class="ImageInCard" style="height:'</span>+ imageWidth * imageY / imageX + <span class="string">'px"&gt;'</span> +</span><br><span class="line">                      <span class="string">'&lt;a data-fancybox="gallery" href="'</span> + imgPath + imgNameWithPattern + <span class="string">'" data-caption="'</span> + imgName + <span class="string">'" title="'</span> +  imgName + <span class="string">'"&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;img data-src="'</span> + imgPath + imgNameWithPattern + <span class="string">' " src="'</span> + imgPath + imgNameWithPattern + <span class="string">' " data-loaded="true"&gt;'</span> +</span><br><span class="line">                      <span class="string">'&lt;/a&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;/div&gt;'</span> +</span><br><span class="line">                  <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">".ImageGrid"</span>).append(li);</span><br><span class="line">        <span class="keyword">this</span>.minigrid();</span><br><span class="line">    &#125;,</span><br><span class="line">    minigrid: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> grid = <span class="keyword">new</span> Minigrid(&#123;</span><br><span class="line">            container: <span class="string">'.ImageGrid'</span>,</span><br><span class="line">            item: <span class="string">'.card'</span>,</span><br><span class="line">            gutter: <span class="number">12</span></span><br><span class="line">        &#125;);</span><br><span class="line">        grid.mount();</span><br><span class="line">        $(<span class="built_in">window</span>).resize(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">           grid.mount();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">photo.init();</span><br></pre></td></tr></table></figure><p>然后，在 <code>/source/_data/</code> 下创建 <code>body-end.swig</code> 文件，并添加如下代码：</p><figure class="highlight html"><figcaption><span>/source/_data/body-end.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% if page.type ==='picture' %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/minigrid@3.1.1/dist/minigrid.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/photo.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>因为这里利用到了主题注入功能，所以需要在<strong>主题配置文件</strong>启用该功能：</p><figure class="highlight diff"><figcaption><span>/themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"> custom_file_path:</span><br><span class="line"><span class="deletion">-  #bodyEnd: source/_data/body-end.swig</span></span><br><span class="line"><span class="addition">+  bodyEnd: source/_data/body-end.swig</span></span><br></pre></td></tr></table></figure><h2 id="3-编辑相册页面"><a href="#3-编辑相册页面" class="headerlink" title="3. 编辑相册页面"></a>3. 编辑相册页面</h2><p>新建相册页 <code>hexo new page photos</code>，创建 <code>/source/photos/index.md</code>，编辑为以下内容：</p><figure class="highlight markdown"><figcaption><span>/source/photos/index.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 相册</span><br><span class="line">type: picture</span><br><span class="line">comments: true</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line">.ImageGrid &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  max-width: 1040px;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.card &#123;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  transition: .3s ease-in-out;</span><br><span class="line">  border-radius: 8px;</span><br><span class="line">  background-color: #efefef;</span><br><span class="line">  padding: 1.4px;</span><br><span class="line">&#125;</span><br><span class="line">.ImageInCard img &#123;</span><br><span class="line">  padding: 0;</span><br><span class="line">  border-radius: 8px;</span><br><span class="line">&#125;</span><br><span class="line">@media (prefers-color-scheme: dark) &#123;</span><br><span class="line">  .card &#123;background-color: #333;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ImageGrid"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="4-主题配置文件设置"><a href="#4-主题配置文件设置" class="headerlink" title="4. 主题配置文件设置"></a>4. 主题配置文件设置</h2><p>在主题配置文件中，按照说明安装和开启 <code>fancybox</code> 。在 <code>menu</code> 添加如下内容可以添加相册页导航菜单：</p><figure class="highlight diff"><figcaption><span>/themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"> menu:</span><br><span class="line"><span class="addition">+  photos: /photos/ || fas fa-camera-retro</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;要展示自己拍摄的照片，可以给博客添加一个瀑布流的相册页面。本文适用于 Hexo 4.2.0 / NexT 7.8.0，参考了 &lt;a href=&quot;https://asdfv1929.github.io/2018/05/26/next-add-photos/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;asdfv1929 的方法&lt;/a&gt;。
    
    </summary>
    
    
      <category term="随手记" scheme="https://blog.dlzhang.com/overview/note/"/>
    
    
      <category term="JavaScript" scheme="https://blog.dlzhang.com/overview/tags/JavaScript/"/>
    
      <category term="blog" scheme="https://blog.dlzhang.com/overview/tags/blog/"/>
    
      <category term="技术" scheme="https://blog.dlzhang.com/overview/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>个人主页与 Hexo NexT 博客搭建记录</title>
    <link href="https://blog.dlzhang.com/posts/2018/%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E4%B8%8E-Hexo-NexT-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
    <id>https://blog.dlzhang.com/posts/2018/%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E4%B8%8E-Hexo-NexT-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</id>
    <published>2018-06-06T10:03:02.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>最近把 <a href="https://dlzhang.com" target="_blank" rel="noopener">个人主页</a> 与 <a href="/">博客</a> 都重新设计了，所以就打算写个总结，自己记录一下一些细节。虽然自认为不会有几个访客，但还是进行了相应的区别定位。个人主页主要是展现个人的简历、研究项目等内容，主要是个人展示目的；博客偏向于个性化一些，主要想进行一些生活日常或者研究过程等记录，也可以展现一些自己的兴趣爱好之类的东西。<a id="more"></a></p><h2 id="1-域名与解析"><a href="#1-域名与解析" class="headerlink" title="1. 域名与解析"></a>1. 域名与解析</h2><p>购买到合适的域名之后，就需要把网站通过 DNS 解析到对应的域名上，我的网站 DNS 解析由 Cloudflare 提供。目前的个人主页与博客都放在 <a href="https://www.netlify.com" target="_blank" rel="noopener">Netlify</a> 上，由 Netlify 获取 GitHub 对应的项目仓库内容自动进行网站页面生成与部署。所以直接在 Netlify 对应的项目中添加好域名，再根据提示去设置解析。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2018/%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E4%B8%8E-Hexo-NexT-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/dns.png!600x" alt="Cloudflare DNS 设置"></p><p>上图中主机记录 <code>Name</code> 就是我们希望网站访问时的域名，如果我们的域名是 <code>example.com</code>，那么设置好主机记录后我们的访问域名也即 <code>主机记录.example.com</code>。当主机记录为 <code>@</code> 时，对应就是直接访问我们的根域名。记录值 <code>Value</code> 填写的是 Netlify 上对应项目的二级域名地址。</p><p>设置好 DNS 解析后，还需要在域名注册商处把域名指向 Cloudflare 提供的两个 NameServer 解析服务器才可以正常访问。</p><p>采用 HTTPS 可以使得浏览数据更加安全，并防止网络运营商对网页进行劫持和插入广告。Netlify 提供由 Let’s Encrypt 颁发的免费证书来开启强制 HTTPS，直接在管理界面就可以点击开启。对于部署在 GitHub Pages上的情况，只需要在 repository 的页面点击 Settings，在 <code>GitHub Pages</code> 下面把 <code>Enforce HTTPS</code> 打勾即可。</p><h2 id="2-Hexo-初始化"><a href="#2-Hexo-初始化" class="headerlink" title="2. Hexo 初始化"></a>2. Hexo 初始化</h2><h3 id="2-1-环境配置"><a href="#2-1-环境配置" class="headerlink" title="2.1 环境配置"></a>2.1 环境配置</h3><div class="note info"><p><strong>提示</strong>：macOS 在编译时候可能会提示没有缺少 Command Line Tools，需要在终端输入 <code>xcode-select --install</code>，然后根据提示安装。</p></div><p>要使用 Hexo NexT 主题的博客，需要先配置好环境，安装 <a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> 和 <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a>。安装完成后，在终端中输入以下命令安装 Hexo：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo yarn global add hexo-cli <span class="comment">#需要输入密码确认，或者 npm install -g hexo-cli</span></span><br></pre></td></tr></table></figure><p>安装 Hexo 完成后，执行下列命令会在指定文件夹中新建所需要的文件：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo init &lt;folder-path&gt;  <span class="comment">#在指定文件夹中初始化 Hexo</span></span><br><span class="line"><span class="built_in">cd</span> &lt;folder-path&gt;  <span class="comment">#定位到 Hexo 博客目录</span></span><br><span class="line">yarn install <span class="comment">#或者 npm install</span></span><br></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录中：</p><ul><li><code>_config.yml</code> 站点配置文件，具体配置的说明可以查看相关 <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">文档</a>。</li><li><code>themes</code> 主题文件夹，Hexo 会根据主题来生成静态页面。</li><li><code>source</code> 文件夹是存放用户资源的地方，Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被复制过去（如 <code>CNAME</code> 文件）。</li></ul><h3 id="2-2-新建文章与页面"><a href="#2-2-新建文章与页面" class="headerlink" title="2.2 新建文章与页面"></a>2.2 新建文章与页面</h3><p>使用以下第一句可以在 <code>source/_post/</code> 文件夹下新建一篇文章；使用以下的第二句可以在 <code>source</code> 下新建以 <code>&lt;page-title&gt;</code> 为名称的文件夹，文件夹内的 <code>index.md</code> 可以在编译后生成一个新的页面。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">"&lt;post-title&gt;"</span>  <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"&lt;page-title&gt;"</span>  <span class="comment">#新建页面</span></span><br></pre></td></tr></table></figure><p>因为原始的都是 Markdown 文件，要让浏览器可以显示美观的网页，需要根据 Markdown 文件生成 HTML 静态文件。执行以下命令：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成静态文件</span></span><br><span class="line">hexo generate  <span class="comment">#或者 hexo g</span></span><br></pre></td></tr></table></figure><p>在某些情况，如果发现对站点的更改无论如何也不生效，可能需要运行该命令，清除缓存文件 <code>db.json</code> 和已生成的静态文件 <code>/public/</code>。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h3 id="2-3-本地预览调试与部署网站"><a href="#2-3-本地预览调试与部署网站" class="headerlink" title="2.3 本地预览调试与部署网站"></a>2.3 本地预览调试与部署网站</h3><p>要在本地预览调试生成的博客网页效果，可以执行以下命令。访问网址为：<code>http://localhost:4000/</code>。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo serve</span><br></pre></td></tr></table></figure><p>如果是部署在 GitHub Pages，可以按照下述命令配置站点配置文件（注意缩进保持一致）：</p><figure class="highlight yaml"><figcaption><span>/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://github.com/&lt;github-username&gt;/&lt;github-repo-name&gt;.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">&lt;github-repo-branch&gt;</span></span><br></pre></td></tr></table></figure><p>设置完成后，执行以下命令。第一次执行过程中会提示输入相应用户名和密码，正确输入后既可以正常部署。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#首次部署要先执行以下命令安装插件</span></span><br><span class="line">yarn add hexo-deployer-git <span class="comment">#或者 npm i hexo-deployer-git --save</span></span><br><span class="line"><span class="comment">#部署网站</span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>在两条命令直接采用 <code>&amp;&amp;</code> 进行连接即可同时执行两条命令。另外，使用以下的命令可以简化命令的使用：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo s -g  <span class="comment">#启动服务器之前预先生成静态文件，等价于 hexo g &amp;&amp; hexo s</span></span><br><span class="line">hexo g -d  <span class="comment">#静态文件生成后立即部署网站，等价于 hexo g &amp;&amp; hexo d</span></span><br></pre></td></tr></table></figure><h3 id="2-4-添加文章命令后自动打开编辑器"><a href="#2-4-添加文章命令后自动打开编辑器" class="headerlink" title="2.4 添加文章命令后自动打开编辑器"></a>2.4 添加文章命令后自动打开编辑器</h3><p>参考：<a href="https://notes.wanghao.work/2015-06-29-Hexo添加文章时自动打开编辑器.html" target="_blank" rel="noopener">Hexo添加文章时自动打开编辑器 - Doublemine</a></p><p>在<strong>站点</strong>文件夹根目录新建文件夹 <code>scripts</code>，然后在文件夹内新建文件 <code>openeditor.js</code>：</p><figure class="highlight javascript"><figcaption><span>/scripts/openeditor.js</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//Windows</span></span><br><span class="line"><span class="keyword">var</span> spawn = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">truespawn(<span class="string">'start  "markdown编辑器绝对路径.exe" '</span> + data.path);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//macOS</span></span><br><span class="line"><span class="keyword">var</span> exec = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">trueexec(<span class="string">'open -a "markdown编辑器绝对路径.app" '</span> + data.path);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="3-博客主题自定义"><a href="#3-博客主题自定义" class="headerlink" title="3. 博客主题自定义"></a>3. 博客主题自定义</h2><h3 id="3-1-修改主题"><a href="#3-1-修改主题" class="headerlink" title="3.1 修改主题"></a>3.1 修改主题</h3><p>可以执行以下命令下载主题文件，当然也可以从 GitHub <a href="https://github.com/theme-next/hexo-theme-next/releases" target="_blank" rel="noopener">直接下载</a> 最新版本压缩包，解压后将文件放在 <code>/themes/next</code> 目录下面。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;blog-path&gt;  <span class="comment">#定位到 Hexo 博客目录</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next /themes/next</span><br></pre></td></tr></table></figure><p>另一种是通过添加子模块的方法载入主题文件：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git submodule add https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>下载主题文件后，打开博客根目录下的站点配置文件（<code>/_config.yml</code>），找到 <code>theme</code> 键值，将值修改为 <code>next</code> 即可。</p><div class="note warning"><p><strong>注意</strong>：图片图标文件可以放到 <code>/themes/next/source/images/</code>（默认图标放在这里）或者 <code>/source/</code> 目录下。如果图标文件放至在 <code>/themes/next/source/images/</code> 目录下，务必注意不要和目录下的默认图标文件名一样，否则在生成静态文件的时候会被默认文件会覆盖。</p></div><h3 id="3-2-站点地图"><a href="#3-2-站点地图" class="headerlink" title="3.2 站点地图"></a>3.2 站点地图</h3><p>要自动生成站点地图，可以执行以下命令，这样以后每次执行 <code>hexo g</code>，都会生成 <code>sitemap.xml</code>。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;blog-path&gt;</span><br><span class="line">yarn add hexo-generator-sitemap <span class="comment">#或者 npm i hexo-generator-sitemap --save</span></span><br></pre></td></tr></table></figure><h3 id="3-3-与主题样式一致的404页面"><a href="#3-3-与主题样式一致的404页面" class="headerlink" title="3.3 与主题样式一致的404页面"></a>3.3 与主题样式一致的404页面</h3><p>要生成一个和主题样式一致的404页面，首先需要新建一个页面：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;blog-path&gt;</span><br><span class="line">hexo new page <span class="string">"404"</span></span><br></pre></td></tr></table></figure><p>编辑该页面的 Markdown 文件为以下内容，正文部分可以自行编辑内容。其中 <code>permalink: /404</code> 表示将该文件解析生成的 HTML 文件永久链接设置为 <code>/404</code>，这样就可以让访客访问错误链接时看到这个页面了。</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 404 Not Found</span><br><span class="line">comments: false</span><br><span class="line">permalink: /404</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="3-4-修改文章永久性链接"><a href="#3-4-修改文章永久性链接" class="headerlink" title="3.4 修改文章永久性链接"></a>3.4 修改文章永久性链接</h3><p>这里使用插件 <code>hexo-abbrlink</code> 来生成博客文章的永久链接，可以查看该插件的 <a href="https://github.com/Rozbo/hexo-abbrlink" target="_blank" rel="noopener">GitHub 项目页面</a>。</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;blog-path&gt;</span><br><span class="line">yarn add hexo-abbrlink <span class="comment">#或者 npm i hexo-abbrlink --save</span></span><br></pre></td></tr></table></figure><p>在站点配置文件中修改 <code>permalink</code>：</p><figure class="highlight diff"><figcaption><span>/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="deletion">-permalink: :year/:month/:day/:title/</span></span><br><span class="line"><span class="addition">+permalink: posts/:abbrlink/</span></span><br><span class="line"><span class="addition">+abbrlink:</span></span><br><span class="line"><span class="addition">+  alg: crc32  #support crc16(default) and crc32</span></span><br><span class="line"><span class="addition">+  rep: hex    #support dec(default) and hex</span></span><br></pre></td></tr></table></figure><h3 id="3-5-文章置顶"><a href="#3-5-文章置顶" class="headerlink" title="3.5 文章置顶"></a>3.5 文章置顶</h3><p>首先替换给文章排序索引的原有插件 <code>hexo-generator-index</code>，执行以下命令</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn remove hexo-generator-index &amp;&amp; yarn add hexo-generator-indexed</span><br><span class="line"></span><br><span class="line"><span class="comment">#或者以下命令</span></span><br><span class="line">npm uni hexo-generator-index --save &amp;&amp; npm i hexo-generator-indexed --save</span><br></pre></td></tr></table></figure><p>然后在需要置顶的文章的开头添加 <code>sticky</code> 控制文章置顶：</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">---</span></span><br><span class="line"><span class="addition">+sticky: true</span></span><br><span class="line"><span class="comment">---</span></span><br></pre></td></tr></table></figure><h3 id="3-6-豆瓣读书电影游戏展示"><a href="#3-6-豆瓣读书电影游戏展示" class="headerlink" title="3.6 豆瓣读书电影游戏展示"></a>3.6 豆瓣读书电影游戏展示</h3><p>如果想在博客中展示自己在豆瓣上的读书、电影、游戏等的信息，可以安装插件 <a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="noopener"><code>hexo-douban</code></a>。而要增加知乎、豆瓣图标支持，请阅读《 <a href="/posts/89dad1c1/">Hexo NexT 博客增加知乎豆瓣图标支持</a>》。</p><p>但是，该插件在 Safari 浏览器下无法显示豆瓣读书中书籍封面图片。需要做的修改就是让页面自动判断是不是豆瓣读书页面，如果是就加载一句 meta 信息，否则就不加载。所以，把以下这段代码加入到 <code>/source/_data/head.swig</code> 之中：</p><figure class="highlight javascript"><figcaption><span>/source/_data/head.swig</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">GetUrlRelativePath</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="built_in">document</span>.location.toString(); <span class="comment">//获取当前链接</span></span><br><span class="line">    <span class="keyword">var</span> arrUrl = url.split(<span class="string">"//"</span>);</span><br><span class="line">    <span class="keyword">var</span> start = arrUrl[<span class="number">1</span>].indexOf(<span class="string">"/"</span>);</span><br><span class="line">    <span class="keyword">var</span> relUrl = arrUrl[<span class="number">1</span>].substring(start); <span class="comment">//截取从start开始到结尾的所有字符</span></span><br><span class="line">    <span class="keyword">if</span>(relUrl.indexOf(<span class="string">"?"</span>) != <span class="number">-1</span>)&#123;</span><br><span class="line">      relUrl = relUrl.split(<span class="string">"?"</span>)[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">      <span class="keyword">return</span> relUrl;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> relUrl = GetUrlRelativePath()</span><br><span class="line">  <span class="keyword">if</span> (relUrl.indexOf(<span class="string">'/books/'</span>)&gt;=<span class="number">0</span>) &#123;  <span class="comment">//判断是否为豆瓣读书页面</span></span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">'&lt;meta name="referrer" content="never" /&gt;'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>因为这里利用到了主题注入功能，所以需要在<strong>主题配置文件</strong>启用该功能：</p><figure class="highlight diff"><figcaption><span>/themes/next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"> custom_file_path:</span><br><span class="line"><span class="deletion">-  #head: source/_data/head.swig</span></span><br><span class="line"><span class="addition">+  head: source/_data/head.swig</span></span><br></pre></td></tr></table></figure><h3 id="3-7-Travis-CI-持续集成"><a href="#3-7-Travis-CI-持续集成" class="headerlink" title="3.7 Travis CI 持续集成"></a>3.7 Travis CI 持续集成</h3><p>具体方法可以查看 <a href="https://juejin.im/post/5a1fa30c6fb9a045263b5d2a" target="_blank" rel="noopener">Hexo遇上Travis-CI：可能是最通俗易懂的自动发布博客图文教程</a>。需要提醒的是目前 Travis CI 已经计划逐渐把 <a href="https://travis-ci.org" target="_blank" rel="noopener">travis-ci.org</a> 的项目迁移到 <a href="https://travis-ci.com" target="_blank" rel="noopener">travis-ci.com</a> ，所以只需要用后者即可。这样就可以让 Travis CI 监视 GitHub 上博客源文件分支的变动，自动生成博客静态网页文件并部署到 GitHub Pages。</p><h3 id="3-8-相册"><a href="#3-8-相册" class="headerlink" title="3.8 相册"></a>3.8 相册</h3><p>关于创建瀑布流的相册，请查看《<a href="/posts/3720dafc/">Hexo NexT 博客增加瀑布流相册页面</a>》。</p><p>文章图片的存储如果放至在博客项目下，会极大地增加项目的空间。所以可以将图片上传到图床，然后在需要图片的地方引用该图片外部链接即可。我现在选择了腾讯云的 COS 对象存储，提供每个月 10GB 的免费外网下行流量，以及每个月 50GB 的免费存储空间。</p><p>另外介绍一个 macOS 上十分实用的批量打水印免费软件 <a href="http://www.xnview.com/en/xnconvert/" target="_blank" rel="noopener">XnConvert</a>，可以查阅这一份 <a href="https://ningselect.com/2017/02/25/攝影小教室-超簡單！一招幫所/" target="_blank" rel="noopener">使用说明</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近把 &lt;a href=&quot;https://dlzhang.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;个人主页&lt;/a&gt; 与 &lt;a href=&quot;/&quot;&gt;博客&lt;/a&gt; 都重新设计了，所以就打算写个总结，自己记录一下一些细节。虽然自认为不会有几个访客，但还是进行了相应的区别定位。个人主页主要是展现个人的简历、研究项目等内容，主要是个人展示目的；博客偏向于个性化一些，主要想进行一些生活日常或者研究过程等记录，也可以展现一些自己的兴趣爱好之类的东西。
    
    </summary>
    
    
      <category term="随手记" scheme="https://blog.dlzhang.com/overview/note/"/>
    
    
      <category term="blog" scheme="https://blog.dlzhang.com/overview/tags/blog/"/>
    
      <category term="技术" scheme="https://blog.dlzhang.com/overview/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>知乎 Live | 香港研究生申请：商科与经济学</title>
    <link href="https://blog.dlzhang.com/posts/2017/%E7%9F%A5%E4%B9%8ELive-%E9%A6%99%E6%B8%AF%E7%A0%94%E7%A9%B6%E7%94%9F%E7%94%B3%E8%AF%B7-%E5%95%86%E7%A7%91%E4%B8%8E%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
    <id>https://blog.dlzhang.com/posts/2017/%E7%9F%A5%E4%B9%8ELive-%E9%A6%99%E6%B8%AF%E7%A0%94%E7%A9%B6%E7%94%9F%E7%94%B3%E8%AF%B7-%E5%95%86%E7%A7%91%E4%B8%8E%E7%BB%8F%E6%B5%8E%E5%AD%A6/</id>
    <published>2017-12-15T13:00:00.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Live-简介"><a href="#Live-简介" class="headerlink" title="Live 简介"></a>Live 简介</h2><p>来香港学习之后，常有人向我咨询香港留学的情况，但很多是较为具体的问题，所以给出的相关建议和看法很难有普遍性。我在知乎、寄托论坛等地方也写过一些申请总结，不过这些很大程度上是我自己的申请过程总结。因此希望通过本次 Live，可以向你介绍一些我总结的申请香港商科与经济学研究生项目的经验以及常见问题，也谈谈在香港研究生学习生活的情况。</p><a id="more"></a><h2 id="内容大纲"><a href="#内容大纲" class="headerlink" title="内容大纲"></a>内容大纲</h2><h3 id="1-概况"><a href="#1-概况" class="headerlink" title="1. 概况"></a>1. 概况</h3><ul><li>我的学习经历与申请过程</li><li>香港高等院校研究生项目开设情况（MSc、MPhil、PhD）</li><li>香港学历认可、认证与留学前档案</li></ul><h3 id="2-商科与经济学授课式硕士申请"><a href="#2-商科与经济学授课式硕士申请" class="headerlink" title="2. 商科与经济学授课式硕士申请"></a>2. 商科与经济学授课式硕士申请</h3><ul><li>商科与经济学主要的授课式硕士项目（项目开设、费用等）</li><li>申请需要准备什么及其常见问题</li></ul><h3 id="3-商科与经济学研究式硕士与博士申请"><a href="#3-商科与经济学研究式硕士与博士申请" class="headerlink" title="3. 商科与经济学研究式硕士与博士申请"></a>3. 商科与经济学研究式硕士与博士申请</h3><ul><li>商科与经济学主要的研究式硕士与博士项目</li><li>申请与录取中的重要因素</li><li>研究生奖学金与 HKPFS（港府奖学金）</li></ul><h3 id="4-研究生学习与博士生科研"><a href="#4-研究生学习与博士生科研" class="headerlink" title="4. 研究生学习与博士生科研"></a>4. 研究生学习与博士生科研</h3><ul><li>授课式硕士 MSc 的毕业要求</li><li>香港在学习期间实习的规定、IANG 与就业安排</li><li>Research Assistant 职位与 MSc 深造</li><li>博士生的科研、助教工作（TA）与日常</li><li>七年之后：留港还是回去</li></ul><p><a href="https://www.zhihu.com/lives/922106856669868032" target="_blank" rel="noopener">参与知乎 Live</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Live-简介&quot;&gt;&lt;a href=&quot;#Live-简介&quot; class=&quot;headerlink&quot; title=&quot;Live 简介&quot;&gt;&lt;/a&gt;Live 简介&lt;/h2&gt;&lt;p&gt;来香港学习之后，常有人向我咨询香港留学的情况，但很多是较为具体的问题，所以给出的相关建议和看法很难有普遍性。我在知乎、寄托论坛等地方也写过一些申请总结，不过这些很大程度上是我自己的申请过程总结。因此希望通过本次 Live，可以向你介绍一些我总结的申请香港商科与经济学研究生项目的经验以及常见问题，也谈谈在香港研究生学习生活的情况。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学术向" scheme="https://blog.dlzhang.com/overview/academic/"/>
    
    
      <category term="申请季" scheme="https://blog.dlzhang.com/overview/tags/%E7%94%B3%E8%AF%B7%E5%AD%A3/"/>
    
      <category term="知乎" scheme="https://blog.dlzhang.com/overview/tags/%E7%9F%A5%E4%B9%8E/"/>
    
  </entry>
  
  <entry>
    <title>上手无人机 体验一把飞行的乐趣</title>
    <link href="https://blog.dlzhang.com/posts/2017/%E4%B8%8A%E6%89%8B%E6%97%A0%E4%BA%BA%E6%9C%BA%E4%BD%93%E9%AA%8C%E4%B8%80%E6%8A%8A%E9%A3%9E%E8%A1%8C%E7%9A%84%E4%B9%90%E8%B6%A3/"/>
    <id>https://blog.dlzhang.com/posts/2017/%E4%B8%8A%E6%89%8B%E6%97%A0%E4%BA%BA%E6%9C%BA%E4%BD%93%E9%AA%8C%E4%B8%80%E6%8A%8A%E9%A3%9E%E8%A1%8C%E7%9A%84%E4%B9%90%E8%B6%A3/</id>
    <published>2017-12-09T00:15:07.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>说起无人机，班班可是种草了整整一年了。自从去年双十一看到新发布的小米无人机就开始种草，到最近趁着「黑五」终于剁手下单了一架无人机（虽然不是小米的）。</p><p>当时看着小米无人机，确实是便宜。但是看到发布会直播中云台装不牢掉下来，加上起飞不久就炸机，看得我是真心不敢买啊。相比较，大疆里差不多价位的有精灵 3 SE，然而体积实在有点大，不想要；而体积小、便携的比如御 Marvic Pro ，又太贵。就这样看了一圈，科技测评节目也看了不少，却依旧没有剁手下单。<a id="more"></a></p><p>今年五月，大疆推出了一款无人机「晓 Spark」，一看这名字就知道体积很小了，而且价格也还不错。仔细研究了一下功能，感觉挺适合我这种新手玩家的，小巧、安全、容易上手。这不上个月底刚好大疆香港官网在黑五优惠嘛，买套装可以便宜700港币，加上九折的教育优惠，就愉快地剁手买买买了。这也算是给我自己11月生日的礼物吧，哈哈哈。</p><p>无人机很快就寄来了，下单次日上午 DHL 从深圳就送来我办公室了，速度很快。下面算是不完整开箱图吧。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2017/%E4%B8%8A%E6%89%8B%E6%97%A0%E4%BA%BA%E6%9C%BA%E4%BD%93%E9%AA%8C%E4%B8%80%E6%8A%8A%E9%A3%9E%E8%A1%8C%E7%9A%84%E4%B9%90%E8%B6%A3/spark1.jpeg!450x" alt="本体自带一块电池，加全能套装一块，共两块电池"></p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2017/%E4%B8%8A%E6%89%8B%E6%97%A0%E4%BA%BA%E6%9C%BA%E4%BD%93%E9%AA%8C%E4%B8%80%E6%8A%8A%E9%A3%9E%E8%A1%8C%E7%9A%84%E4%B9%90%E8%B6%A3/spark2.jpeg!450x" alt="加装了全套保护架之后到"></p><p>下面是带着无人机在中文大学的大学体育中心体育场首飞的画面，因为是由 DJI Go 直接自动生成的，不是原片剪辑，分辨率可能不是很好。<br><video src="https://web-1256060851.file.myqcloud.com/images/2017/上手无人机体验一把飞行的乐趣/SportsCenter.m4v" poster="https://web-1256060851.file.myqcloud.com/images/2017/上手无人机体验一把飞行的乐趣/SportsCenter.png" type="video/m4v" controls></video></p><p>下面是生日当天和办公室小伙伴去建筑学院平台上拍的吐露港和我们商学院大楼的视频，同样由 DJI Go 直接自动生成的，不是原片剪辑。<br><video src="https://web-1256060851.file.myqcloud.com/images/2017/上手无人机体验一把飞行的乐趣/bschool.m4v" poster="https://web-1256060851.file.myqcloud.com/images/2017/上手无人机体验一把飞行的乐趣/bschool.png" type="video/m4v" controls></video></p><p>拍完上面这个视频后我们就去刚才画面中出现过的那个体育场（崇基书院体育场）附近拍了一会儿，DJI Go 自动生成的小视频感觉还挺不错的。<br><video src="https://web-1256060851.file.myqcloud.com/images/2017/上手无人机体验一把飞行的乐趣/ChungChiCollege.m4v" poster="https://web-1256060851.file.myqcloud.com/images/2017/上手无人机体验一把飞行的乐趣/ChungChiCollege.png" type="video/m4v" controls></video></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说起无人机，班班可是种草了整整一年了。自从去年双十一看到新发布的小米无人机就开始种草，到最近趁着「黑五」终于剁手下单了一架无人机（虽然不是小米的）。&lt;/p&gt;&lt;p&gt;当时看着小米无人机，确实是便宜。但是看到发布会直播中云台装不牢掉下来，加上起飞不久就炸机，看得我是真心不敢买啊。相比较，大疆里差不多价位的有精灵 3 SE，然而体积实在有点大，不想要；而体积小、便携的比如御 Marvic Pro ，又太贵。就这样看了一圈，科技测评节目也看了不少，却依旧没有剁手下单。
    
    </summary>
    
    
      <category term="碎碎念" scheme="https://blog.dlzhang.com/overview/ramble/"/>
    
    
      <category term="无人机" scheme="https://blog.dlzhang.com/overview/tags/%E6%97%A0%E4%BA%BA%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>期末阅卷有感</title>
    <link href="https://blog.dlzhang.com/posts/2017/%E6%9C%9F%E6%9C%AB%E9%98%85%E5%8D%B7%E6%9C%89%E6%84%9F/"/>
    <id>https://blog.dlzhang.com/posts/2017/%E6%9C%9F%E6%9C%AB%E9%98%85%E5%8D%B7%E6%9C%89%E6%84%9F/</id>
    <published>2017-12-08T00:22:51.000Z</published>
    <updated>2020-04-05T17:02:31.643Z</updated>
    
    <content type="html"><![CDATA[<p>嗯，前几天在改本学期本科生统计学期末考试卷，总体成绩不佳，最终的平均分、中位数都很低。虽说一年多来已经改了几次本科生期中期末卷见怪不怪了，但在改卷时依然会不时吐槽学生的答卷情况。<a id="more"></a></p><p>由于是商学院本科生试卷，所以老师出得也很偏向于应用，但是学生答卷依然错误颇多，情况不理想。改完试卷统计了一下，有一道4分但不算是很难的题目两个班83份试卷，只有两个学生全对…… 再比如一道题目给了数据表，要求画一个二维坐标的 scatter plot（Sales-Clients），结果有两个学生居然把数据的序号（下图中的 Broker ）也当做一个维度，画了个 3D 的图，还很精美，实在佩服佩服。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2017/%E6%9C%9F%E6%9C%AB%E9%98%85%E5%8D%B7%E6%9C%89%E6%84%9F/exampaper1.jpeg!500x" alt="学生试卷"></p><p>还有的学生呢，胆子大到直接篡改试卷题目。题目里给出了两组数据，类似：</p><p>$$x_1=6.8, n_1=40; x_2=7, n_2=44$$</p><p>然后，学生在下面答题时候式子的下标1和2写反了，他居然不是想着改一下自己答案的下标，而是直接去把试卷题目里的下标改掉了，改……掉……了…… 我是第一次见到这样敢直接篡改试卷题目的孩子，够机智，十分佩服，然后我就把他分数扣了。</p><p><img data-src="https://web-1256060851.file.myqcloud.com/images/2017/%E6%9C%9F%E6%9C%AB%E9%98%85%E5%8D%B7%E6%9C%89%E6%84%9F/exampaper2.jpeg!500x" alt="学生试卷"></p><p>虽然考前和考试时候已经提醒了选择题答题卡涂卡注意事项，但是还是会发生这样或那样的情况也是有点心累。有的会忘记涂班级号，有的没带铅笔直接用水笔涂卡，错了就用修正带涂掉或者用叉叉划掉，导致机器阅卷时候在读这道题直接报错。</p><p>本次考试排名末尾的低分段里也发现了好几位内地学生。虽然近年来港就读本科课程的学生已经不如当年状元级别，但也应是很优秀的高中毕业生，现在一门基础的二年级应用统计学课程只考了二十几分，不得不令人唏嘘。其中有一位学生上学年的一门经济学基础课我正好也担任了助教，印象中该生那门课程的成绩也是排名末尾，只拿了十几二十几分。想说，在参加各种校园活动、提升自己人际交往能力和职业素养的时候，可能这些学生还是应该再关注一下自己的专业技能和知识的学习掌握。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;嗯，前几天在改本学期本科生统计学期末考试卷，总体成绩不佳，最终的平均分、中位数都很低。虽说一年多来已经改了几次本科生期中期末卷见怪不怪了，但在改卷时依然会不时吐槽学生的答卷情况。
    
    </summary>
    
    
      <category term="碎碎念" scheme="https://blog.dlzhang.com/overview/ramble/"/>
    
    
      <category term="cuhk" scheme="https://blog.dlzhang.com/overview/tags/cuhk/"/>
    
      <category term="教学" scheme="https://blog.dlzhang.com/overview/tags/%E6%95%99%E5%AD%A6/"/>
    
  </entry>
  
</feed>
